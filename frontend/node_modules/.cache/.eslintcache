<<<<<<< HEAD
[{"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\index.js":"1","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js":"3","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\App.js":"4","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\login.js":"5","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\routes\\index.js":"6","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js":"7","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js":"8","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js":"9","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\supervisor\\sup_sidebar.js":"10","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js":"11","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\tasks.js":"12","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\view_task.js":"13","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js":"14","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js":"15","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js":"16","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js":"17","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\add_task.js":"18","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js":"19","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js":"20","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js":"21","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\addbonus.js":"22","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\bonuslist.js":"23","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\loggedTasks.js":"24","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\machine\\machineinfo.js":"25"},{"size":665,"mtime":1673370399820,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1673018018067,"results":"28","hashOfConfig":"27"},{"size":535,"mtime":1673358829451,"results":"29","hashOfConfig":"27"},{"size":1994,"mtime":1673740443081,"results":"30","hashOfConfig":"27"},{"size":4250,"mtime":1673730614411,"results":"31","hashOfConfig":"27"},{"size":1894,"mtime":1673741391746,"results":"32","hashOfConfig":"27"},{"size":210,"mtime":1673738130640,"results":"33","hashOfConfig":"27"},{"size":2737,"mtime":1673738005016,"results":"34","hashOfConfig":"27"},{"size":2505,"mtime":1673737883007,"results":"35","hashOfConfig":"27"},{"size":2914,"mtime":1673737918902,"results":"36","hashOfConfig":"27"},{"size":1284,"mtime":1673740499780,"results":"37","hashOfConfig":"27"},{"size":4797,"mtime":1673729894782,"results":"38","hashOfConfig":"27"},{"size":1066,"mtime":1673728043878,"results":"39","hashOfConfig":"27"},{"size":4490,"mtime":1673732895123,"results":"40","hashOfConfig":"27"},{"size":1913,"mtime":1673728057936,"results":"41","hashOfConfig":"27"},{"size":12080,"mtime":1673704126621,"results":"42","hashOfConfig":"27"},{"size":12541,"mtime":1673727332690,"results":"43","hashOfConfig":"27"},{"size":9092,"mtime":1673727834080,"results":"44","hashOfConfig":"27"},{"size":3628,"mtime":1673728154425,"results":"45","hashOfConfig":"27"},{"size":3091,"mtime":1673732940513,"results":"46","hashOfConfig":"27"},{"size":7248,"mtime":1673738099552,"results":"47","hashOfConfig":"27"},{"size":6645,"mtime":1673732209228,"results":"48","hashOfConfig":"27"},{"size":3833,"mtime":1673741371320,"results":"49","hashOfConfig":"27"},{"size":3981,"mtime":1673732078787,"results":"50","hashOfConfig":"27"},{"size":4977,"mtime":1673743480184,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1afnnh1",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\index.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\App.js",["130","131","132","133","134","135","136","137"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\login.js",["138","139","140","141","142"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\routes\\index.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js",["143","144"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport './../../css/style.css';\r\n\r\nlet empname;\r\n\r\nfunction EmpSidebar(props) {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const empdata = JSON.parse(localStorage.getItem('data'));\r\n    if (empdata) {\r\n      setData(empdata);\r\n    }\r\n  }, []);\r\n\r\n  const onDashboard = () => {\r\n    window.location = \"#/dashboard\";\r\n  };\r\n\r\n  const onLogistics = () => {\r\n    window.location = \"#/logistics\";\r\n  }\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('data');\r\n    window.location = \"#/\";\r\n  }\r\n\r\n  const onTasks = () => {\r\n    window.location = \"#/empTasks\";\r\n  }\r\n  const onBonus = () => {\r\n    window.location = \"#/bonuslist\";\r\n  };\r\n  const onMachine = () => {\r\n    window.location = \"#/machineinfo\";\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"d-flex\">\r\n      <nav id=\"sidebar\">\r\n\r\n        <div className=\"p-4 pt-5 bg-dark\">\r\n          <h3 style={{ textAlign: 'center', color: \"white\" }}><strong>EMPLOYEE</strong></h3>\r\n          < h5 style={{ textAlign: 'center', color: \"white\" }}>{empname}</h5>\r\n          <hr style={{ backgroundColor: \"white\" }} />\r\n          <ul className=\"nav nav-pills flex-column mb-auto\">\r\n            <button type=\"button\" className=\"btn btn-dark w-100\" onClick={() => { onDashboard() }}>Dashboard</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => { onTasks() }}>Tasks</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => { onLogistics() }}>Logistics</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => { onMachine() }}>Machine Information</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\">Refinery/Purity Status</button><br></br>\r\n            <hr style={{ backgroundColor: \"white\" }} />\r\n            <button type=\"button\" className=\"btn btn-dark\">Attendance</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\">Salary</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => { onBonus() }}>Bonuses</button><br></br>\r\n\r\n          </ul>\r\n          {\r\n            data.map((item) => (\r\n              empname = item.name,\r\n              <span></span>\r\n            ))}\r\n          \r\n\r\n          <hr style={{ backgroundColor: \"white\" }} />\r\n            <button type=\"button\" className=\"btn btn-outline-danger btn-block\" onClick={() => { onLogOut() }} >Sign out</button><br/>\r\n          < div className=\"footer\">\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </nav >\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default EmpSidebar;",[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js",["145","146","147","148","149"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\supervisor\\sup_sidebar.js",["150","151"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\tasks.js",["152","153","154","155","156","157"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\view_task.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js",["158"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js",["159"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\add_task.js",["160","161"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js",["162","163"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js",["164"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Button } from 'primereact/button';\r\nimport constants from '../../utilities/constants';\r\nimport Image from \"../assets/mapsicon.png\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\n\r\nfunction LogList(props) {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.logList);\r\n      setData(result.data.logistics);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const AddLogistics = () => {\r\n    props.history.push({\r\n      pathname: '/add_logs/',\r\n    });\r\n  }\r\n\r\n  const EditLogs = (item) => {\r\n    let Logs_Edit = {\r\n\r\n      logs: Object.assign({}, item),\r\n\r\n    }\r\n\r\n    props.history.push({\r\n      pathname: '/edit_logs/',\r\n      data: Logs_Edit\r\n    });\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h2><b>Logistics Data List</b></h2>\r\n      <div>\r\n        <br></br><p>\r\n        <Button style={{ fontSize:'18px'}} onClick={() => { AddLogistics() }}>Add Logistics</Button>\r\n        </p>\r\n      </div>\r\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" style={{ fontSize:'18px'}}>#</th>\r\n            <th scope=\"col\" style={{ fontSize:'18px'}}>Vendor Name</th>\r\n            <th scope=\"col\" style={{ fontSize:'18px'}}>Amount</th>\r\n            <th scope=\"col\" style={{ fontSize:'18px'}}>Delivery Date</th>\r\n            <th scope=\"col\" style={{ fontSize:'18px'}}>Location</th>\r\n            <th scope=\"col\" style={{ fontSize:'18px'}}>Delivery Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, i) => (\r\n              <tr style={ item.delivery_status === \"pending\" ? {backgroundColor: \"#FFCCCB\"} : {backgroundColor: \"#90EE90\"}} key={i}> \r\n                <th style={{ fontSize:'18px'}} scope=\"row\" >{i + 1}</th>\r\n                <td style={{ fontSize:'18px'}}>{item.name}</td>\r\n                <td style={{ fontSize:'18px'}}>{item.amount}</td>\r\n                <td style={{ fontSize:'18px'}}>{item.delivery_date.replace(/T.*/,'').split('-').reverse().join('-')}</td>\r\n                <td style={{maxWidth: '50px'}}>\r\n                  <a style={{color: \"blue\",fontSize:'18px'}} target='_blank' rel='noreferrer' href={item.location}>\r\n                    <u>go to maps</u>\r\n                  </a>\r\n                </td>\r\n                <td style={{ fontSize:'18px'}}>{item.delivery_status} \r\n                <Button style={{float: 'right',fontSize:'16px'}} className=\"p-button-warning\" onClick={() => { EditLogs(item) }}>Edit</Button></td>\r\n              </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LogList);","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js",["165","166"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\addbonus.js",["167","168","169"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\bonuslist.js",["170","171"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\loggedTasks.js",["172","173","174","175","176","177","178"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\machine\\machineinfo.js",["179","180","181","182","183","184"],[],{"ruleId":"185","severity":1,"message":"186","line":23,"column":10,"nodeType":"187","messageId":"188","endLine":23,"endColumn":21},{"ruleId":"185","severity":1,"message":"189","line":23,"column":23,"nodeType":"187","messageId":"188","endLine":23,"endColumn":37},{"ruleId":"185","severity":1,"message":"190","line":33,"column":9,"nodeType":"187","messageId":"188","endLine":33,"endColumn":19},{"ruleId":"185","severity":1,"message":"191","line":37,"column":9,"nodeType":"187","messageId":"188","endLine":37,"endColumn":17},{"ruleId":"185","severity":1,"message":"192","line":42,"column":9,"nodeType":"187","messageId":"188","endLine":42,"endColumn":20},{"ruleId":"185","severity":1,"message":"193","line":45,"column":9,"nodeType":"187","messageId":"188","endLine":45,"endColumn":15},{"ruleId":"185","severity":1,"message":"194","line":48,"column":9,"nodeType":"187","messageId":"188","endLine":48,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":64,"column":36,"nodeType":"197","messageId":"198","endLine":64,"endColumn":37},{"ruleId":"185","severity":1,"message":"199","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"200","line":13,"column":7,"nodeType":"187","messageId":"188","endLine":13,"endColumn":12},{"ruleId":"185","severity":1,"message":"201","line":41,"column":9,"nodeType":"187","messageId":"188","endLine":41,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":44,"column":5,"nodeType":"204","messageId":"205","endLine":50,"endColumn":6},{"ruleId":"206","severity":1,"message":"207","line":45,"column":23,"nodeType":"208","messageId":"209","endLine":45,"endColumn":25},{"ruleId":"185","severity":1,"message":"210","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":68,"column":34,"nodeType":"197","messageId":"198","endLine":68,"endColumn":35},{"ruleId":"185","severity":1,"message":"211","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":16},{"ruleId":"185","severity":1,"message":"210","line":2,"column":18,"nodeType":"187","messageId":"188","endLine":2,"endColumn":23},{"ruleId":"185","severity":1,"message":"212","line":2,"column":25,"nodeType":"187","messageId":"188","endLine":2,"endColumn":29},{"ruleId":"185","severity":1,"message":"213","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":64,"column":34,"nodeType":"197","messageId":"198","endLine":64,"endColumn":35},{"ruleId":"185","severity":1,"message":"210","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":71,"column":34,"nodeType":"197","messageId":"198","endLine":71,"endColumn":35},{"ruleId":"185","severity":1,"message":"214","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":13},{"ruleId":"185","severity":1,"message":"215","line":8,"column":10,"nodeType":"187","messageId":"188","endLine":8,"endColumn":18},{"ruleId":"185","severity":1,"message":"216","line":14,"column":10,"nodeType":"187","messageId":"188","endLine":14,"endColumn":24},{"ruleId":"185","severity":1,"message":"217","line":14,"column":26,"nodeType":"187","messageId":"188","endLine":14,"endColumn":43},{"ruleId":"185","severity":1,"message":"218","line":20,"column":9,"nodeType":"187","messageId":"188","endLine":20,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":136,"column":25,"nodeType":"221","messageId":"222","endLine":136,"endColumn":27},{"ruleId":"223","severity":1,"message":"224","line":38,"column":6,"nodeType":"225","endLine":38,"endColumn":8,"suggestions":"226"},{"ruleId":"185","severity":1,"message":"227","line":20,"column":12,"nodeType":"187","messageId":"188","endLine":20,"endColumn":23},{"ruleId":"185","severity":1,"message":"227","line":21,"column":12,"nodeType":"187","messageId":"188","endLine":21,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":22,"column":12,"nodeType":"187","messageId":"188","endLine":22,"endColumn":23},{"ruleId":"185","severity":1,"message":"199","line":2,"column":17,"nodeType":"187","messageId":"188","endLine":2,"endColumn":26},{"ruleId":"185","severity":1,"message":"228","line":7,"column":10,"nodeType":"187","messageId":"188","endLine":7,"endColumn":20},{"ruleId":"185","severity":1,"message":"229","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":13},{"ruleId":"185","severity":1,"message":"227","line":18,"column":12,"nodeType":"187","messageId":"188","endLine":18,"endColumn":23},{"ruleId":"230","severity":1,"message":"231","line":123,"column":31,"nodeType":"232","messageId":"233","endLine":123,"endColumn":146,"fix":"234"},{"ruleId":"185","severity":1,"message":"235","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":18},{"ruleId":"185","severity":1,"message":"227","line":21,"column":12,"nodeType":"187","messageId":"188","endLine":21,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":22,"column":12,"nodeType":"187","messageId":"188","endLine":22,"endColumn":23},{"ruleId":"185","severity":1,"message":"215","line":8,"column":10,"nodeType":"187","messageId":"188","endLine":8,"endColumn":18},{"ruleId":"185","severity":1,"message":"218","line":18,"column":9,"nodeType":"187","messageId":"188","endLine":18,"endColumn":18},{"ruleId":"185","severity":1,"message":"236","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":45},{"ruleId":"185","severity":1,"message":"214","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":13},{"ruleId":"185","severity":1,"message":"215","line":8,"column":10,"nodeType":"187","messageId":"188","endLine":8,"endColumn":18},{"ruleId":"185","severity":1,"message":"216","line":17,"column":10,"nodeType":"187","messageId":"188","endLine":17,"endColumn":24},{"ruleId":"185","severity":1,"message":"217","line":17,"column":26,"nodeType":"187","messageId":"188","endLine":17,"endColumn":43},{"ruleId":"219","severity":1,"message":"237","line":26,"column":17,"nodeType":"221","messageId":"222","endLine":26,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":113,"column":26,"nodeType":"221","messageId":"222","endLine":113,"endColumn":28},{"ruleId":"185","severity":1,"message":"238","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":16},{"ruleId":"185","severity":1,"message":"239","line":14,"column":10,"nodeType":"187","messageId":"188","endLine":14,"endColumn":19},{"ruleId":"185","severity":1,"message":"240","line":16,"column":10,"nodeType":"187","messageId":"188","endLine":16,"endColumn":21},{"ruleId":"223","severity":1,"message":"241","line":88,"column":16,"nodeType":"242","endLine":88,"endColumn":56},{"ruleId":"223","severity":1,"message":"243","line":89,"column":37,"nodeType":"244","endLine":89,"endColumn":45},{"ruleId":"185","severity":1,"message":"245","line":108,"column":9,"nodeType":"187","messageId":"188","endLine":108,"endColumn":21},"no-unused-vars","'showLoading' is assigned a value but never used.","Identifier","unusedVar","'setShowLoading' is assigned a value but never used.","'onEmployee' is assigned a value but never used.","'onLogOut' is assigned a value but never used.","'onLogistics' is assigned a value but never used.","'onTask' is assigned a value but never used.","'onBonus' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'datas' is assigned a value but never used.","'design' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Dashboard' is defined but never used.","'Table' is defined but never used.","'parseISO' is defined but never used.","'panelCollapsed' is assigned a value but never used.","'setpanelCollapsed' is assigned a value but never used.","'fetchData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["246"],"'setShowData' is assigned a value but never used.","'classNames' is defined but never used.","'Image' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"247","text":"248"},"'Calendar' is defined but never used.","'useMemo' is defined but never used.","Expected '!==' and instead saw '!='.","'Dialog' is defined but never used.","'workingID' is assigned a value but never used.","'showMessage' is assigned a value but never used.","Assignments to the 'empdata' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'forID' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'EditEmployee' is assigned a value but never used.",{"desc":"249","fix":"250"},[6908,6908]," rel=\"noreferrer\"","Update the dependencies array to be: [options]",{"range":"251","text":"252"},[1025,1027],"[options]"]
=======
[{"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\index.js":"1","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js":"3","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\App.js":"4","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\components\\login.js":"5","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\routes\\index.js":"6","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js":"7","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js":"8","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js":"9","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\supervisor\\sup_sidebar.js":"10","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js":"11","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\tasks.js":"12","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\add_task.js":"13","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\view_task.js":"14","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\viewbonus.js":"15","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\bonuslist.js":"16","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\addbonus.js":"17","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js":"18","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js":"19","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js":"20","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js":"21","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\loggedTasks.js":"22","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js":"23","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js":"24","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js":"25","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\machine\\machineinfo.js":"26","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\refinery\\refineList.js":"27","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\refinery\\addPurities.js":"28","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\refinery\\editPurities.js":"29"},{"size":665,"mtime":1673381643284,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1673175370207,"results":"32","hashOfConfig":"31"},{"size":535,"mtime":1673381643255,"results":"33","hashOfConfig":"31"},{"size":1990,"mtime":1673771387876,"results":"34","hashOfConfig":"31"},{"size":4250,"mtime":1673733642808,"results":"35","hashOfConfig":"31"},{"size":2238,"mtime":1673782371259,"results":"36","hashOfConfig":"31"},{"size":2307,"mtime":1673771387883,"results":"37","hashOfConfig":"31"},{"size":217,"mtime":1673733642812,"results":"38","hashOfConfig":"31"},{"size":2849,"mtime":1673782371247,"results":"39","hashOfConfig":"31"},{"size":3028,"mtime":1673782371257,"results":"40","hashOfConfig":"31"},{"size":1315,"mtime":1673782371272,"results":"41","hashOfConfig":"31"},{"size":4797,"mtime":1673733642835,"results":"42","hashOfConfig":"31"},{"size":9092,"mtime":1673733642833,"results":"43","hashOfConfig":"31"},{"size":1066,"mtime":1673733642836,"results":"44","hashOfConfig":"31"},{"size":0,"mtime":1673733642817,"results":"45","hashOfConfig":"31"},{"size":3968,"mtime":1673733642816,"results":"46","hashOfConfig":"31"},{"size":6645,"mtime":1673733642814,"results":"47","hashOfConfig":"31"},{"size":1913,"mtime":1673733642825,"results":"48","hashOfConfig":"31"},{"size":12080,"mtime":1673733642819,"results":"49","hashOfConfig":"31"},{"size":4490,"mtime":1673733642821,"results":"50","hashOfConfig":"31"},{"size":12541,"mtime":1673733642818,"results":"51","hashOfConfig":"31"},{"size":3981,"mtime":1673733642834,"results":"52","hashOfConfig":"31"},{"size":4224,"mtime":1673771387898,"results":"53","hashOfConfig":"31"},{"size":7248,"mtime":1673733642828,"results":"54","hashOfConfig":"31"},{"size":3628,"mtime":1673733642829,"results":"55","hashOfConfig":"31"},{"size":6375,"mtime":1673781604750,"results":"56","hashOfConfig":"31"},{"size":5831,"mtime":1673782371250,"results":"57","hashOfConfig":"31"},{"size":14813,"mtime":1673782371249,"results":"58","hashOfConfig":"31"},{"size":14595,"mtime":1673782371249,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"bcjljx",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"63"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"63"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"145","usedDeprecatedRules":"63"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"63"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\index.js",[],[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\App.js",["162","163","164","165","166","167","168","169"],[],"import { React, useState, useEffect } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\"\r\nimport { Routes } from './routes/index.js';\r\nimport Dashboard from \"./container/Dashboard\";\r\nimport ItSidebar from './components/it-dept/it-sidebar';\r\nimport EmpSidebar from './container/emp/emp_sidebar';\r\n\r\nimport './css/style.css';\r\n\r\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";  //theme\r\nimport \"primereact/resources/primereact.min.css\";                  //core css\r\nimport \"primeicons/primeicons.css\";\r\nimport SupSidebar from './container/supervisor/sup_sidebar';\r\n\r\nlet design;\r\n\r\nfunction App(props) {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const realdata = JSON.parse(localStorage.getItem('data'));\r\n    if (realdata){\r\n      setData(realdata);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const onEmployee = () => {\r\n    window.location = \"#/empList\";\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    localStorage.removeItem(\"data\")\r\n    window.location = \"/\";\r\n  };\r\n\r\n  const onLogistics = () => {\r\n    window.location = \"#/logistics\";\r\n  };\r\n  const onTask = () => {\r\n    window.location = \"#/tasks\";\r\n  };\r\n  const onBonus = () => {\r\n    window.location = \"#/bonuslist\";\r\n  };\r\n\r\n\r\n  window.onbeforeunload = function () {\r\n    localStorage.removeItem(\"data\");\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"wrapper d-flex align-items-stretch\">\r\n\r\n      \r\n      {\r\n        data.map((item, i) => (\r\n          design = item.designation,\r\n      <div className='d-flex'>\r\n\r\n      {\r\n        (design === \"admin\") ? <ItSidebar /> : ((design === \"supervisor\") ? <SupSidebar/> : <EmpSidebar />)\r\n      }\r\n      </div>\r\n      \r\n    \r\n          \r\n      ))}\r\n      <div id=\"content\" className=\"p-4 p-md-5\">\r\n        <Route path=\"/App\" exact component={Dashboard} />\r\n        <Routes />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\components\\login.js",["170","171","172","173","174"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../style.css\";\r\nimport Image from \"./assets/login-img.jpg\";\r\nimport constants from './../utilities/constants';\r\nimport axios from \"axios\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\n\r\nfunction Login(props) {\r\n  const [data, setData] = useState([]);\r\n  let datas = data.length;\r\n  var em;\r\n  var pass;\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     var em = document.getElementById(\"forEmail\").value;\r\n  //     var pass = document.getElementById(\"forPass\").value;\r\n  //     const result = await axios(constant.login + `?email=${em}&password=${pass}`);\r\n  //     setData(result.data.details);\r\n  //     //console.log(result)\r\n  //     setShowLoading(false);\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  const changed = async () => {\r\n    em = document.getElementById(\"forEmail\").value;\r\n    pass = document.getElementById(\"forPass\").value;\r\n    const result = await axios(constant.login + `?email=${em}&password=${pass}`);\r\n    setData(result.data.details);\r\n  }\r\n  \r\n\r\n  const onSubmit = async () => {\r\n    em = document.getElementById(\"forEmail\").value;\r\n    pass = document.getElementById(\"forPass\").value;\r\n    let design;\r\n    const result = await axios(constant.login + `?email=${em}&password=${pass}`);\r\n    setData(result.data.details);\r\n    {\r\n      data.map((item) => {\r\n        if (em === item.email) {\r\n          design = item.designation\r\n        }\r\n      })\r\n    }\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n    (data.length > 0 ?\r\n        props.history.push({\r\n          pathname: 'App'\r\n        })\r\n      : alert(\"Account does not exist.\")\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <section className=\"vh-100\">\r\n        <div className=\"container-fluid bg-dark\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 text-black\">\r\n              <div className=\"px-5 ms-xl-4\">\r\n                <i\r\n                  className=\"fas fa-crow fa-2x me-3 pt-5 mt-xl-4\"\r\n                  style={{ color: \"#709085\" }}\r\n                />\r\n                <h1 style={{ color: \"#e6e6e6\", fontSize: \"70px\", marginBottom: \"0px\", marginTop: \"80px\" }}>\r\n                  MATRIX MS\r\n                </h1>\r\n              </div>\r\n              <div style={{ marginTop: \"50px\" }} className=\"d-flex align-items-center px-5 ms-xl-4 pt-xl-0\">\r\n                <form style={{ width: \"23rem\" }}>\r\n                  <div className=\"form-outline mb-4\">\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"forEmail\"\r\n                      placeholder=\"Email\"\r\n                      className=\"form-control form-control-lg\"\r\n                      onChange={changed}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-outline mb-4\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"forPass\"\r\n                      placeholder=\"Password\"\r\n                      className=\"form-control form-control-lg\"\r\n                      onChange={changed}\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <br />\r\n                    <button\r\n                      className=\"btn btn-outline-info btn-lg btn-block\"\r\n                      type=\"button\" onClick={() => { onSubmit() }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n           \r\n                  <br />\r\n                  <p className=\"small mb-5 pb-lg-2\">\r\n                    <a className=\"text-muted\" href=\"#!\">\r\n                      Forgot password?\r\n                    </a>\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-6 px-0 d-none d-sm-block\">\r\n              <img\r\n                src={Image}\r\n                alt=\"\"\r\n                className=\"w-100 vh-100\"\r\n                style={{ objectFit: \"cover\", objectPosition: \"left\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\routes\\index.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js",["175","176","177","178","179"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './../../css/style.css';\r\nimport Dashboard from \"../../container/Dashboard\";\r\n\r\nlet empname;\r\n\r\n\r\n\r\nfunction ItSidebar() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const empdata = JSON.parse(localStorage.getItem('data'));\r\n    if (empdata) {\r\n      setData(empdata);\r\n    }\r\n  }, []);\r\n\r\n  const onEmployee = () => {\r\n    window.location = \"#/empList\";\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    localStorage.removeItem('data');\r\n    window.location = \"#/\";\r\n  }\r\n  const onBonus = () => {\r\n    window.location = \"#/bonuslist\";\r\n  };\r\n  const onMachine = () => {\r\n    window.location = \"#/machineinfo\";\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App d-flex\">\r\n\r\n      <nav id=\"sidebar\">\r\n        <div className=\"p-4 pt-5 bg-dark\">\r\n          <h3 style={{ textAlign: 'center', color: \"white\" }}><strong>IT DEPARTMENT</strong></h3>\r\n          \r\n          <h5 style={{ textAlign: 'center', color: \"white\" }}>{empname}</h5>\r\n          <hr style={{ backgroundColor: \"white\" }} />\r\n          <ul className=\"nav nav-pills flex-column mb-auto\">\r\n\r\n            <button type=\"button\" className=\"btn btn-dark w-100\" onClick={() => { onEmployee() }}>Employee</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\"onClick={() => { onMachine() }}> Machine Information</button><br></br>\r\n            <hr style={{ backgroundColor: \"white\" }} />\r\n            <button type=\"button\" className=\"btn btn-dark\">Attendance</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\">Salary</button><br></br>\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => { onBonus() }}>Bonuses</button><br></br>\r\n\r\n          </ul>\r\n          {\r\n            data.map((item) => (\r\n              empname = item.name,\r\n              <span></span>\r\n            ))}\r\n          <hr style={{ backgroundColor: \"white\" }} />\r\n          <button type=\"button\" className=\"btn btn-outline-danger btn-block\" onClick={() => { onLogOut() }} >Sign out</button>\r\n\r\n\r\n          <div className=\"footer\">\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItSidebar;","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js",["180","181"],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\supervisor\\sup_sidebar.js",["182","183"],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\tasks.js",["184","185","186","187","188","189"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Button } from 'primereact/button';\r\nimport constants from '../../utilities/constants';\r\nimport { parseISO } from \"date-fns\"\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Panel } from 'primereact/panel';\r\nimport '../../css/style.css';\r\nconst constant = constants.getConstant();\r\nfunction TaskList(props) {\r\n  const [panelCollapsed, setpanelCollapsed] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [selectedId, setSelectedId] = useState({});\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  const fetchData = e => {\r\n    const query = e.target.value\r\n    fetch(constant.taskList + `?name=${query}`)\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        setData(data.taskList)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.taskList);\r\n      setData(result.data.taskList);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const showDetail = (item) => {\r\n\r\n    let Task_View = {\r\n      taskview:  item,\r\n    }\r\n  \r\n    props.history.push({\r\n      pathname: '/view_task/',\r\n      task: Task_View\r\n    });\r\n  }\r\n\r\n  const AddTask = () => {\r\n    props.history.push({\r\n      pathname: '/add_task/',\r\n    });\r\n  }\r\n  const deleteData = () => {\r\n\r\n    let id = selectedId;\r\n    axios.delete(constant.taskList + `?id=${id}`)\r\n      .then((result) => {\r\n        setShowMessage(false);\r\n        axios.get(constant.taskList)\r\n          .then((result) => {\r\n            setData(result.data.taskList);\r\n\r\n          }).catch((error) => setShowMessage(false));\r\n\r\n      }).catch((error) => setShowMessage(false));\r\n\r\n  }\r\n\r\n\r\n  // const EditEmployee = (item) => {\r\n  //   item['date_of_birth'] = parseISO(item.date_of_birth);\r\n  //   let Employee_Edit = {\r\n\r\n  //     emp: Object.assign({}, item),\r\n\r\n  //   }\r\n  // }\r\n\r\n  const selectedItem = (id) => {\r\n    setSelectedId(id);\r\n    setShowMessage(true)\r\n  }\r\n  const onComplete = (id) => {\r\n   \r\n    axios.put(constant.taskList + `?id=${id}`)\r\n      .then((result) => {\r\n        setShowMessage(false);\r\n        axios.get(constant.taskList)\r\n          .then((result) => {\r\n            setData(result.data.taskList);\r\n\r\n          }).catch((error) => setShowMessage(false));\r\n\r\n      }).catch((error) => setShowMessage(false));\r\n  }\r\n  const dialogFooter = <div className=\"flex justify-content-center\">\r\n  <Button label=\"Yes\" className=\"p-button-danger\" autoFocus onClick={() => deleteData()} />\r\n  <Button label=\"No\" className=\"p-button-warning\" autoFocus onClick={() => setShowMessage(false)} />\r\n</div>;\r\n  return (\r\n\r\n    <div className=\"form-demo\">\r\n     <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n        <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n\r\n          <h5>Are you sure you want to Delete?</h5>\r\n          <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n         \r\n          </p>\r\n        </div>\r\n      </Dialog>\r\n      <h2><b>Task List</b></h2>\r\n   \r\n      <div>\r\n        <br></br><p>\r\n          <Button style={{ fontSize:'18px'}} onClick={() => { AddTask() }}>Add Task</Button>\r\n        </p>\r\n      </div>\r\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>}\r\n      {data.map((item, i) => (\r\n        \r\n      <Panel header={item.name} toggleable style={{ fontSize:'20px'}} >\r\n        <div>\r\n          <p style={ (item.status === \"pending\") ? {color: \"orange\",fontSize:'20px'} : {color: \"green\",fontSize:'20px'}}><strong>{item.status}</strong></p>\r\n          <p style={{ fontSize:'20px'}}>{item.taskdetails[0].name}</p>\r\n          <p style={{ fontSize:'20px'}}>{item.taskdetails[0].designation}</p>\r\n          <p style={{ fontSize:'20px'}}>{item.taskdetails[0].department}</p>\r\n          <Button onClick={() => { showDetail(item) }} className=\"p-button-success\">View</Button>\r\n          {(item.status == \"pending\") ? <Button style={{ marginLeft:'1rem'}} className=\"p-button-warning\" onClick={() => { onComplete(item._id) }}>Mark as Completed</Button> : <span></span>}\r\n          \r\n          <Button style={{ marginLeft:'1rem'}} className=\"p-button-danger\" onClick={() => { selectedItem(item._id) }}>Delete</Button>\r\n          </div>\r\n      </Panel>\r\n      ))}\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(TaskList);","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\add_task.js",["190","191"],[],"\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { classNames } from 'primereact/utils';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\nimport { Toast } from 'primereact/toast';\r\nconst constant = constants.getConstant();\r\nexport const AddLogs = (props) => {\r\n    // const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    const [setShowData, setFormData] = useState({});\r\n    const [showLoading, setShowLoading] = useState(true);\r\n    const [selectedEmp, setSelectedEmp] = useState(null);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const [data, setData] = useState(null);\r\n    const myToast = useRef(null);\r\n    const dt = useRef(null);\r\n    // const countryservice = new CountryService();\r\n    const defaultValues = {\r\n        name: '',\r\n        description: '',\r\n        // status: constant.Pen_status,\r\n        assign_date: '',\r\n        deadline: '',\r\n        emp_id: ''\r\n    }\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(constant.empList);\r\n            setData(result.data.employees);\r\n            setShowLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        if (validate(data)) {\r\n            data['emp_id'] = selectedEmp._id;\r\n            setFormData(data);\r\n            console.log(data);\r\n            axios.post(constant.taskList, data)\r\n                .then((result) => {\r\n                    setShowMessage(true)\r\n                }).catch((error) => setShowMessage(false));\r\n            reset();\r\n        }\r\n\r\n    };\r\n     let validate = (data) => {\r\n        let val = true;\r\n        if (data.deadline < data.assign_date) {\r\n            val = false;\r\n            exMessage('error', 'select valid date', 'validation exception');\r\n        }\r\n        if (selectedEmp === null) {\r\n            val = false;\r\n            exMessage('error', 'select employee to assign task', 'validation exception');\r\n        }\r\n\r\n        return val;\r\n    }\r\n    const TaskList = () => {\r\n        props.history.push({\r\n            pathname: '/tasks/',\r\n        });\r\n    }\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n    const exMessage = (severity, summary, detail) => {\r\n        return myToast.current.show({ severity: severity, summary: summary, detail: detail });\r\n    };\r\n\r\n\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\">\r\n        <Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => TaskList()} /></div>;\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n          \r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\r\n            </span>\r\n        </div>\r\n    );\r\n    return (\r\n\r\n        <div className=\"form-demo\">\r\n            <Toast ref={myToast}></Toast>\r\n\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }} ></i>\r\n                    <h5>Submission Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, }}><b>Task is successfully added!</b></p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"justify-content-center\">\r\n               \r\n            <h2 className=\"text-center\"><b>Task Details Submission</b></h2>\r\n                <div className=\"card\" style={{ paddingBottom: '2rem', paddingTop: '2rem' }}>\r\n               \r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"grid p-fluid\">\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"name\" control={control} rules={{ required: 'Name is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.name} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': errors.name })}>Task Name*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"description\" control={control} rules={{ required: 'Description is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.description} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"description\" className={classNames({ 'p-error': errors.description })}>Task description*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('description')}\r\n                        </div><br></br>\r\n\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"assign_date\" control={control} rules={{ required: 'Date is required.' }} render={({ field, fieldState }) => (\r\n                                    <Calendar id={field.assign_date} value={field.value} onChange={(e) => field.onChange(e.value)} className={classNames({ 'p-invalid': fieldState.invalid })} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                )} />\r\n                                <label htmlFor=\"assign_date\" className={classNames({ 'p-error': errors.assign_date })}>Assigning Date</label>\r\n                            </span>\r\n                            {getFormErrorMessage('assign_date')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"deadline\" control={control} rules={{ required: 'Date is required.' }} render={({ field, fieldState }) => (\r\n                                    <Calendar id={field.deadline} value={field.value} onChange={(e) => field.onChange(e.value)} className={classNames({ 'p-invalid': fieldState.invalid })} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                )} />\r\n                                <label htmlFor=\"deadline\" className={classNames({ 'p-error': errors.deadline })}>Deadline Date</label>\r\n                            </span>\r\n                            {getFormErrorMessage('deadline')}\r\n                        </div><br></br>\r\n\r\n                        <div className='col-12'>\r\n                            <h5 className=\"text-center\"><b>Select employee to assign task</b></h5>\r\n                            <DataTable ref={dt} value={data} selectionMode=\"single\" selection={selectedEmp} onSelectionChange={e => setSelectedEmp(e.value)} dataKey=\"_id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                    globalFilter={globalFilter} header={header} responsiveLayout=\"scroll\">\r\n                                <Column field=\"name\" header=\"Name\"></Column>\r\n                                <Column field=\"designation\" header=\"Designation\"></Column>\r\n                                <Column field=\"department\" header=\"Department\"></Column>\r\n\r\n                            </DataTable></div>\r\n                        <div className='col-12'>\r\n                            <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddLogs);","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\view_task.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\viewbonus.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\bonuslist.js",["192","193"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Button } from 'primereact/button';\r\nimport constants from '../../utilities/constants';\r\nimport { parseISO } from \"date-fns\"\r\nimport { Dialog } from 'primereact/dialog';\r\nimport '../../css/style.css';\r\nconst constant = constants.getConstant();\r\nfunction Bonuslist(props) {\r\n  const [data, setData] = useState([]);\r\n  const [deleteId, setDeleteId] = useState({});\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  const fetchData = e => {\r\n    const query = e.target.value\r\n    fetch(constant.bonusList + `?name=${query}`)\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        setData(data.bonusList)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.bonusList);\r\n      setData(result.data.bonusList);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // const ViewBonus = (id) => {\r\n  //   props.history.push({\r\n  //     pathname: '/viewbonus/',\r\n  //     id: id\r\n\r\n  //   });\r\n  // }\r\n  const AddBonus = () => {\r\n    props.history.push({\r\n      pathname: '/addbonus/',\r\n    });\r\n  }\r\n\r\n  const deleteData = () => {\r\n\r\n    let id = deleteId;\r\n    axios.delete(constant.bonusList + `?id=${id}`)\r\n      .then((result) => {\r\n        setShowMessage(false);\r\n        axios.get(constant.bonusList)\r\n          .then((result) => {\r\n            setData(result.data.bonusList);\r\n\r\n          }).catch((error) => setShowMessage(false));\r\n\r\n      }).catch((error) => setShowMessage(false));\r\n\r\n  }\r\n\r\n\r\n\r\n  const selectedItem = (id) => {\r\n    setDeleteId(id);\r\n    setShowMessage(true)\r\n  }\r\n\r\n\r\n  const dialogFooter = <div className=\"flex justify-content-center\">\r\n    <Button label=\"Yes\" className=\"p-button-danger\" autoFocus onClick={() => deleteData()} />\r\n    <Button label=\"No\" className=\"p-button-warning\" autoFocus onClick={() => setShowMessage(false)} />\r\n  </div>;\r\n  return (\r\n\r\n    <div className=\"form-demo\">\r\n      <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n        <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n\r\n          <h5>Are you sure you want to Delete?</h5>\r\n          <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n      \r\n          </p>\r\n        </div>\r\n      </Dialog>\r\n      <h2><b>Bonus List</b></h2>\r\n      <div>\r\n        <br></br><p>\r\n          <Button style={{ fontSize:'18px'}} onClick={() => { AddBonus() }}>Add Bonus</Button>\r\n        </p>\r\n      </div>\r\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Bonus Title</th>\r\n            <th scope=\"col\">Employee</th>\r\n            <th scope=\"col\">Bonus Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, i) => (\r\n            <tr key={i}>\r\n              <th scope=\"row\" >{i + 1}</th>\r\n              <td style={{ fontSize:'20px'}}>{item.name}</td>\r\n              <td style={{ fontSize:'20px'}}>{item.bonusdetails[0].name}</td>\r\n              <td style={{ fontSize:'20px'}}>{item.amount}\r\n              <Button style={{float: 'right',fontSize:'16px'}} className=\"p-button-danger\" onClick={() => { selectedItem(item._id) }}>Delete</Button></td>\r\n              <td>\r\n               \r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Bonuslist);","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\bonuses\\addbonus.js",["194","195","196"],[],"\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { classNames } from 'primereact/utils';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\nimport { Toast } from 'primereact/toast';\r\nconst constant = constants.getConstant();\r\nexport const AddBonus = (props) => {\r\n    // const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    const [setShowData, setFormData] = useState({});\r\n    const [showLoading, setShowLoading] = useState(true);\r\n    const [selectedEmp, setSelectedEmp] = useState(null);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const [data, setData] = useState(null);\r\n    const myToast = useRef(null);\r\n    const dt = useRef(null);\r\n    // const countryservice = new CountryService();\r\n    const defaultValues = {\r\n        name: '',\r\n        amount: '',\r\n        emp_id: ''\r\n    }\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(constant.empList);\r\n            setData(result.data.employees);\r\n            setShowLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\r\n    const onSubmit = (data) => {\r\n            data['emp_id'] = selectedEmp._id;\r\n            setFormData(data);\r\n            console.log(data);\r\n            axios.post(constant.bonusList, data)\r\n                .then((result) => {\r\n                    setShowMessage(true)\r\n                }).catch((error) => setShowMessage(false));\r\n            reset();\r\n    };\r\n     \r\n    const BonusList = () => {\r\n        props.history.push({\r\n            pathname: '/bonuslist/',\r\n        });\r\n    }\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n  \r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\">\r\n        <Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => BonusList()} /></div>;\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n          \r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\r\n            </span>\r\n        </div>\r\n    );\r\n    return (\r\n\r\n        <div className=\"form-demo\">\r\n            <Toast ref={myToast}></Toast>\r\n\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }} ></i>\r\n                    <h5>Submission Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, }}><b>Bonus Details successfully added!</b></p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"justify-content-center\">\r\n                <h2 className=\"text-center\"><b>Bonus Details Submission</b></h2>\r\n\r\n                <div className=\"card\" style={{ paddingBottom: '2rem', paddingTop: '2rem' }}>\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"grid p-fluid\">\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"name\" control={control} rules={{ required: 'Name is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.name} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': errors.name })}>Bonus Title*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"amount\" control={control} rules={{ required: 'Amount is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.amount} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"amount\" className={classNames({ 'p-error': errors.amount })}>Bonus amount*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('amount')}\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <h3 className=\"text-center\"><b>Select employee to give bonus</b></h3>\r\n                            <DataTable ref={dt} value={data} selectionMode=\"single\" selection={selectedEmp} onSelectionChange={e => setSelectedEmp(e.value)} dataKey=\"_id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                    globalFilter={globalFilter} header={header} responsiveLayout=\"scroll\">\r\n                                <Column field=\"name\" header=\"Name\"></Column>\r\n                                <Column field=\"designation\" header=\"Designation\"></Column>\r\n                                <Column field=\"department\" header=\"Department\"></Column>\r\n\r\n                            </DataTable></div>\r\n                        <div className='col-12'>\r\n                            <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddBonus);","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js",["197"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { withRouter ,useLocation} from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\n\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nconst constant = constants.getConstant();\r\nfunction Show(props) {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  \r\n  const location = useLocation();\r\n \r\n  const options = {\r\n    method: 'GET',\r\n    url: constant.empView,\r\n    params: {  id : location.id },\r\n    headers: {\r\n        'content-type': 'application/json',\r\n        'X-RapidAPI-Key': 'your-rapidapi-key',\r\n        'X-RapidAPI-Host': 'microsoft-translator-text.p.rapidapi.com',\r\n    },\r\n      \r\n};\r\n  useEffect(() => {\r\n   \r\n    const fetchData = async () => {\r\n      const result = await axios.request(options);\r\n      setData(result.data);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner> }\r\n      <h2><b>Employee View</b></h2>\r\n      <Jumbotron>   \r\n  {data.map((item,i) => (\r\n <div key={i}>\r\n  <h4><b>Name</b><br/>{item.name} </h4>  \r\n  <h4><b>Designation</b><br/>{item.designation}</h4> \r\n  <h4><b>Email</b><br/>{item.email}</h4> \r\n  <h4><b>Phone</b><br/>{item.phone}</h4> \r\n  <h4><b>Salary</b><br/>{item.salary}</h4> \r\n  <h4><b>Address</b><br/>{item.address}</h4> \r\n  <h4><b>Cnic</b><br/>{item.cnic}</h4> \r\n  <h4><b>Date of birth</b><br/>{item.date_of_birth.replace(/T.*/,'').split('-').reverse().join('-')}</h4> \r\n  <h4><b>Department</b><br/>{item.department}</h4> \r\n  <h4><b>Gender</b><br/>{item.gender}</h4> \r\n   </div>  \r\n    ))}\r\n  </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Show);","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js",[],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js",["198"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Divider } from 'primereact/divider';\r\nimport { classNames } from 'primereact/utils';\r\nimport { Password } from 'primereact/password';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\nconst constant = constants.getConstant();\r\nexport const AddEmp = (props) => {\r\n    // const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [setShowData,setFormData] = useState({});\r\n    // const countryservice = new CountryService();\r\n    const defaultValues = {\r\n        name: '',\r\n\tdesignation: '',\r\n\temail: '',\r\n    password:'',\r\n\tphone: '',\r\n\tsalary: '',\r\n\taddress: '',\r\n\tcnic: '',\r\n\tdate_of_birth: '',\r\n\tdepartment: '',\r\n\tgender: ''\r\n    }\r\n    const genders = [\r\n        {label: 'Male', value: 'male'},\r\n        {label: 'Female', value: 'female'}\r\n       \r\n    ];\r\n    useEffect(() => {\r\n        // countryservice.getCountries().then(data => setCountries(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\r\n    const onSubmit = (data) => {\r\n        setFormData(data);\r\n        \r\n        axios.post(constant.empAdd, data)\r\n          .then((result) => {\r\n            setShowMessage(true)\r\n          }).catch((error) => setShowMessage(false));\r\n        reset();\r\n    };\r\n\r\n    const EmployeeList = () => {\r\n        props.history.push({\r\n          pathname: '/empList/',\r\n        });\r\n      }\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\"><Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => EmployeeList()} /></div>;\r\n    const passwordHeader = <h6>Pick a password</h6>;\r\n    const passwordFooter = (\r\n        <React.Fragment>\r\n            <Divider />\r\n            <p className=\"mt-2\">Suggestions</p>\r\n            <ul className=\"pl-2 ml-2 mt-0\" style={{ lineHeight: '1.5' }}>\r\n                <li>At least one lowercase</li>\r\n                <li>At least one uppercase</li>\r\n                <li>At least one numeric</li>\r\n                <li>Minimum 8 characters</li>\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }} ></i>\r\n                    <h5>Registration Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, }}><b>Employee Details is successfully added!</b></p>\r\n                    \r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"justify-content-center \">\r\n            <h2 className=\"text-center\"><b>Register Employee</b></h2>\r\n                <div className=\"card\" style={{ paddingBottom: '2rem', paddingTop: '2rem' }}>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"grid p-fluid\">\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"name\" control={control} rules={{ required: 'Name is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.name} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': errors.name })}>Full Name*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"designation\" control={control} rules={{ required: 'Designation is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.designation} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"designation\" className={classNames({ 'p-error': errors.designation })}>Designation*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('designation')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label p-input-icon-right\">\r\n                                <i className=\"pi pi-envelope\" />\r\n                                <Controller name=\"email\" control={control}\r\n                                    rules={{ required: 'Email is required.', pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'Invalid email address. E.g. example@email.com' }}}\r\n                                    render={({ field, fieldState }) => (\r\n                                        <InputText id={field.name} {...field} className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"email\" className={classNames({ 'p-error': !!errors.email })}>Email*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('email')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"password\" control={control} rules={{ required: 'Password is required.' }} render={({ field, fieldState }) => (\r\n                                    <Password id={field.name} {...field} toggleMask className={classNames({ 'p-invalid': fieldState.invalid })} header={passwordHeader} footer={passwordFooter} />\r\n                                )} />\r\n                                <label htmlFor=\"password\" className={classNames({ 'p-error': errors.password })}>Password*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('password')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"phone\" control={control} rules={{ required: 'Phone is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.phone} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"phone\" className={classNames({ 'p-error': errors.phone })}>Phone*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('phone')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"salary\" control={control} rules={{ required: 'Salary is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.salary} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"salary\" className={classNames({ 'p-error': errors.salary })}>Salary*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('salary')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"address\" control={control} rules={{ required: 'address is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.address} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"address\" className={classNames({ 'p-error': errors.address })}>Address*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('address')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"cnic\" control={control} rules={{ required: 'Cnic is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.cnic} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"cnic\" className={classNames({ 'p-error': errors.cnic })}>Cnic*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('cnic')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"department\" control={control} rules={{ required: 'Department is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.department} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"department\" className={classNames({ 'p-error': errors.department })}>Department*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('department')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"gender\" control={control} rules={{ required: 'gender is required.' }} render={({ field }) => (\r\n                                   <Dropdown id={field.name}  value={field.value} options={genders} onChange={(e) => field.onChange(e.value)} placeholder=\"Select a Gender\"/>\r\n                                )} />\r\n                                <label htmlFor=\"gender\" className={classNames({ 'p-error': errors.gender })}>gender*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('gender')}\r\n                        </div><br></br>\r\n                     \r\n                        <div className=\"field col-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"date_of_birth\" control={control} rules={{ required: 'Date is required.' }} render={({ field }) => (\r\n                                    <Calendar id={field.name} value={field.value} onChange={(e) => field.onChange(e.value)} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                )} />\r\n                                <label htmlFor=\"date_of_birth\" className={classNames({ 'p-error': errors.department })}>date of birth</label>\r\n                            </span>\r\n                            {getFormErrorMessage('date_of_birth')}\r\n                        </div><br></br>\r\n                        <div className=\"col-12\">\r\n                        <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                     </div>\r\n                     \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddEmp);            ","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\task\\loggedTasks.js",["199","200","201","202","203","204","205"],[],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Button } from \"primereact/button\";\r\nimport constants from \"../../utilities/constants\";\r\nimport { parseISO } from \"date-fns\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Panel } from \"primereact/panel\";\r\nimport \"../../css/style.css\";\r\nconst constant = constants.getConstant();\r\n\r\nlet forID;\r\n\r\nfunction LoggedTaskList(props) {\r\n  const [panelCollapsed, setpanelCollapsed] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (forID != undefined) {\r\n        const result = await axios(constant.loggedTasks + `?id=${forID}`);\r\n        setData(result.data.taskList);\r\n      }\r\n      setShowLoading(false);\r\n    }\r\n    const loggedData = JSON.parse(localStorage.getItem(\"data\"));\r\n    loggedData.map((item) => (forID = item._id));\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const showDetail = (item) => {\r\n    let Task_View = {\r\n      taskview: item,\r\n    };\r\n\r\n    props.history.push({\r\n      pathname: \"/view_task/\",\r\n      task: Task_View,\r\n    });\r\n  };\r\n\r\n  const onComplete = (id) => {\r\n    axios\r\n      .put(constant.taskList + `?id=${id}`)\r\n      .then((result) => {\r\n        setShowMessage(false);\r\n        axios\r\n          .get(constant.taskList)\r\n          .then((result) => {\r\n            setData(result.data.taskList);\r\n          })\r\n          .catch((error) => setShowMessage(false));\r\n      })\r\n      .catch((error) => setShowMessage(false));\r\n  };\r\n  return (\r\n    <div className=\"form-demo\">\r\n      <Dialog\r\n        visible={showMessage}\r\n        onHide={() => setShowMessage(false)}\r\n        position=\"top\"\r\n        showHeader={false}\r\n        breakpoints={{ \"960px\": \"80vw\" }}\r\n        style={{ width: \"30vw\" }}\r\n      >\r\n        <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n          <h5>Are you sure you want to Delete?</h5>\r\n          <p style={{ lineHeight: 1.5, textIndent: \"1rem\" }}>\r\n            Your Task is Updated successfully\r\n          </p>\r\n        </div>\r\n      </Dialog>\r\n      <h2>Task List</h2>\r\n     \r\n      <div>\r\n        <br></br>\r\n      </div>\r\n      {showLoading && (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n      {data.map((item, i) => (\r\n        <Panel  style={{ fontSize:'22px'}} header={item.name} toggleable>\r\n          <div>\r\n            <p\r\n              style={\r\n                item.status === \"pending\"\r\n                  ? { color: \"orange\",fontSize:'18px' }\r\n                  : { color: \"green\",fontSize:'18px' }\r\n              }\r\n            >\r\n              <strong >{item.status}</strong>\r\n            </p>\r\n            <p style={{ fontSize:'18px'}}>{item.taskdetails[0].name}</p>\r\n            <p style={{ fontSize:'18px'}}>{item.taskdetails[0].designation}</p>\r\n            <p style={{ fontSize:'18px'}}>{item.taskdetails[0].department}</p>\r\n            <Button style={{ marginLeft:'1rem'}}\r\n              onClick={() => {\r\n                showDetail(item);\r\n              }}\r\n              className=\"p-button-success\"\r\n            >\r\n              View\r\n            </Button>\r\n            {item.status == \"pending\" ? (\r\n              <Button style={{ marginLeft:'1rem'}}\r\n                className=\"p-button-warning\"\r\n                onClick={() => {\r\n                  onComplete(item._id);\r\n                }}\r\n              >\r\n                Mark as Completed\r\n              </Button>\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n          </div>\r\n        </Panel>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoggedTaskList);\r\n","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js",["206"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Button } from \"primereact/button\";\r\nimport constants from \"../../utilities/constants\";\r\nimport Image from \"../assets/mapsicon.png\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\nfunction LogList(props) {\r\n  const empData = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.logList);\r\n      setData(result.data.logistics);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const AddLogistics = () => {\r\n    props.history.push({\r\n      pathname: \"/add_logs/\",\r\n    });\r\n  };\r\n\r\n  const EditLogs = (item) => {\r\n    let Logs_Edit = {\r\n      logs: Object.assign({}, item),\r\n    };\r\n\r\n    props.history.push({\r\n      pathname: \"/edit_logs/\",\r\n      data: Logs_Edit,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <b>Logistics Data List</b>\r\n      </h2>\r\n      {empData.map((item) =>\r\n        item.designation === \"supervisor\" ? (\r\n          <div>\r\n            <br></br>\r\n            <p>\r\n              <Button\r\n                style={{ fontSize: \"18px\" }}\r\n                onClick={() => {\r\n                  AddLogistics();\r\n                }}\r\n              >\r\n                Add Logistics\r\n              </Button>\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <span></span>\r\n        )\r\n      )}\r\n      {showLoading && (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" style={{ fontSize: \"18px\" }}>\r\n              #\r\n            </th>\r\n            <th scope=\"col\" style={{ fontSize: \"18px\" }}>\r\n              Vendor Name\r\n            </th>\r\n            <th scope=\"col\" style={{ fontSize: \"18px\" }}>\r\n              Amount\r\n            </th>\r\n            <th scope=\"col\" style={{ fontSize: \"18px\" }}>\r\n              Delivery Date\r\n            </th>\r\n            <th scope=\"col\" style={{ fontSize: \"18px\" }}>\r\n              Location\r\n            </th>\r\n            <th scope=\"col\" style={{ fontSize: \"18px\" }}>\r\n              Delivery Status\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, i) => (\r\n            <tr\r\n              style={\r\n                item.delivery_status === \"pending\"\r\n                  ? { backgroundColor: \"#FFCCCB\" }\r\n                  : { backgroundColor: \"#90EE90\" }\r\n              }\r\n              key={i}\r\n            >\r\n              <th style={{ fontSize: \"18px\" }} scope=\"row\">\r\n                {i + 1}\r\n              </th>\r\n              <td style={{ fontSize: \"18px\" }}>{item.name}</td>\r\n              <td style={{ fontSize: \"18px\" }}>{item.amount}</td>\r\n              <td style={{ fontSize: \"18px\" }}>\r\n                {item.delivery_date\r\n                  .replace(/T.*/, \"\")\r\n                  .split(\"-\")\r\n                  .reverse()\r\n                  .join(\"-\")}\r\n              </td>\r\n              <td style={{ maxWidth: \"50px\" }}>\r\n                <a\r\n                  style={{ color: \"blue\", fontSize: \"18px\" }}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  href={item.location}\r\n                >\r\n                  <u>go to maps</u>\r\n                </a>\r\n              </td>\r\n              <td style={{ fontSize: \"18px\" }}>\r\n                {item.delivery_status}\r\n                <Button\r\n                  style={{ float: \"right\", fontSize: \"16px\" }}\r\n                  className=\"p-button-warning\"\r\n                  onClick={() => {\r\n                    EditLogs(item);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LogList);\r\n","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js",["207","208"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { classNames } from 'primereact/utils';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\nconst constant = constants.getConstant();\r\nexport const AddLogs = (props) => {\r\n    // const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [setShowData, setFormData] = useState({});\r\n    // const countryservice = new CountryService();\r\n    const defaultValues = {\r\n        name: '',\r\n        amount: '',\r\n        delivery_date: '',\r\n        delivery_status: '',\r\n        location: ''\r\n    }\r\n\r\n    const delivery_status = [\r\n        {label: 'Pending', value: 'pending'},\r\n        {label: 'Delivered', value: 'delivered'}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // countryservice.getCountries().then(data => setCountries(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        setFormData(data);\r\n\r\n        axios.post(constant.logList, data)\r\n            .then((result) => {\r\n                setShowMessage(true)\r\n            }).catch((error) => setShowMessage(false));\r\n        reset();\r\n    };\r\n\r\n    const LogisticsList = () => {\r\n        props.history.push({\r\n            pathname: '/logistics/',\r\n        });\r\n    }\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\">\r\n        <Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => LogisticsList()} /></div>;\r\n    \r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }} ></i>\r\n                    <h5>Submission Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, }}><b> Logistics Details is successfully added!</b></p>\r\n                    \r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"justify-content-center\">\r\n            <h2 className=\"text-center\"><b>Logistics Details Submission</b></h2>\r\n                <div className=\"card\" style={{ paddingBottom: '2rem', paddingTop: '2rem' }}>      \r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"grid p-fluid\">\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"name\" control={control} rules={{ required: 'Name is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.name} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': errors.name })}>Vendor Name*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"amount\" control={control} rules={{ required: 'Amount is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.amount} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"amount\" className={classNames({ 'p-error': errors.amount })}>Amount*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('amount')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_date\" control={control} render={({ field }) => (\r\n                                    <Calendar id={field.delivery_date} value={field.value} onChange={(e) => field.onChange(e.value)} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                )} />\r\n                                <label htmlFor=\"delivery_date\">Delivery Date</label>\r\n                            </span>\r\n                        </div><br></br>\r\n                        <div className=\"field col-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_status\" control={control} rules={{ required: 'Delivery Status is required.' }} render={({ field }) => (\r\n                                   <Dropdown id={field._id}  value={field.value} options={delivery_status} onChange={(e) => field.onChange(e.value)} placeholder=\"Select a Delivery Status\"/>\r\n                                )} />\r\n                                <label htmlFor=\"delivery_status\" className={classNames({ 'p-error': errors.delivery_status })}>Delivery Status*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('delivery_status')}\r\n                        </div><br></br>\r\n                        <div className=\"field col-10\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"location\" control={control} rules={{ required: 'Location is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.location} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                    \r\n                                )} />\r\n                                <label htmlFor=\"location\" className={classNames({ 'p-error': errors.location })}>Location*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('location')}\r\n                        </div><a target={'_blank'} href='https://www.google.com/maps' style={{ fontSize:'20px',paddingTop:'1rem',color: \"blue\"}}><u>Go to map</u></a> <br></br>\r\n                        <div className=\"field col-12\">\r\n                        <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddLogs);","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js",["209","210"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { classNames } from 'primereact/utils';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter,useLocation } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\n\r\nconst constant = constants.getConstant();\r\n\r\nexport const EditLogistics = (props) => {\r\n    const location = useLocation();\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    let defaultValues = location.data.logs;\r\n\r\n    const delivery_status = [\r\n        {label: 'Pending', value: 'pending'},\r\n        {label: 'Delivered', value: 'delivered'}\r\n    ];\r\n\r\n    const onSubmit = (data) => {\r\n        axios.put(constant.logList+`?id=${data._id}`, data)\r\n          .then((result) => {\r\n            setShowMessage(true)\r\n          }).catch((error) => setShowMessage(false));\r\n        \r\n    };\r\n    const LogisticsList = () => {\r\n        props.history.push({\r\n          pathname: '/logistics/',\r\n        });\r\n      }\r\n\r\n\r\n      const { control, formState: { errors }, handleSubmit } = useForm({ defaultValues });\r\n    \r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\"><Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => LogisticsList()} /></div>;\r\n    \r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }}></i>\r\n                    <h5>Submission Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n                       Your Delivery Status has been Updated successfully\r\n                    </p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"justify-content-center\">\r\n                <div className=\"card\" style={{ paddingBottom: '1rem', paddingTop: '0.5rem',paddingLeft:'1.5rem' }}>\r\n                  \r\n                    <h4 style={{ paddingBottom: '1rem', paddingTop: '1.5rem' }}><b>Update Delivery Status</b></h4>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"grid p-fluid\">\r\n                        <div className=\"field col-2\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_status\" control={control}  render={({ field }) => (\r\n                                   <Dropdown id={field._id}  value={field.value} options={delivery_status} onChange={(e) => field.onChange(e.value)} placeholder=\"Select a Delivery Status\"/>\r\n                                )} />\r\n                            </span>\r\n                            {getFormErrorMessage('delivery_status')}\r\n                        </div>\r\n                      <div className='col-2'>\r\n                     <Button type=\"submit\" label=\"Submit\" />\r\n                     </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(EditLogistics);      ","C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\machine\\machineinfo.js",["211","212","213","214","215","216","217"],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\refinery\\refineList.js",["218","219","220","221"],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\refinery\\addPurities.js",["222","223"],[],"C:\\Users\\moasf\\Documents\\Uni Stuff\\Sem5\\Software Construction\\project\\Matrix-MERN-App\\frontend\\src\\container\\refinery\\editPurities.js",["224","225"],[],{"ruleId":"226","severity":1,"message":"227","line":22,"column":10,"nodeType":"228","messageId":"229","endLine":22,"endColumn":21},{"ruleId":"226","severity":1,"message":"230","line":22,"column":23,"nodeType":"228","messageId":"229","endLine":22,"endColumn":37},{"ruleId":"226","severity":1,"message":"231","line":32,"column":9,"nodeType":"228","messageId":"229","endLine":32,"endColumn":19},{"ruleId":"226","severity":1,"message":"232","line":36,"column":9,"nodeType":"228","messageId":"229","endLine":36,"endColumn":17},{"ruleId":"226","severity":1,"message":"233","line":41,"column":9,"nodeType":"228","messageId":"229","endLine":41,"endColumn":20},{"ruleId":"226","severity":1,"message":"234","line":44,"column":9,"nodeType":"228","messageId":"229","endLine":44,"endColumn":15},{"ruleId":"226","severity":1,"message":"235","line":47,"column":9,"nodeType":"228","messageId":"229","endLine":47,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":63,"column":36,"nodeType":"238","messageId":"239","endLine":63,"endColumn":37},{"ruleId":"226","severity":1,"message":"240","line":1,"column":27,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"241","line":13,"column":7,"nodeType":"228","messageId":"229","endLine":13,"endColumn":12},{"ruleId":"226","severity":1,"message":"242","line":41,"column":9,"nodeType":"228","messageId":"229","endLine":41,"endColumn":15},{"ruleId":"243","severity":1,"message":"244","line":44,"column":5,"nodeType":"245","messageId":"246","endLine":50,"endColumn":6},{"ruleId":"247","severity":1,"message":"248","line":45,"column":23,"nodeType":"249","messageId":"250","endLine":45,"endColumn":25},{"ruleId":"226","severity":1,"message":"251","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":16},{"ruleId":"226","severity":1,"message":"252","line":2,"column":18,"nodeType":"228","messageId":"229","endLine":2,"endColumn":23},{"ruleId":"226","severity":1,"message":"253","line":2,"column":25,"nodeType":"228","messageId":"229","endLine":2,"endColumn":29},{"ruleId":"226","severity":1,"message":"254","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":64,"column":34,"nodeType":"238","messageId":"239","endLine":64,"endColumn":35},{"ruleId":"226","severity":1,"message":"252","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":72,"column":34,"nodeType":"238","messageId":"239","endLine":72,"endColumn":35},{"ruleId":"226","severity":1,"message":"252","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":76,"column":34,"nodeType":"238","messageId":"239","endLine":76,"endColumn":35},{"ruleId":"226","severity":1,"message":"255","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":13},{"ruleId":"226","severity":1,"message":"256","line":8,"column":10,"nodeType":"228","messageId":"229","endLine":8,"endColumn":18},{"ruleId":"226","severity":1,"message":"257","line":14,"column":10,"nodeType":"228","messageId":"229","endLine":14,"endColumn":24},{"ruleId":"226","severity":1,"message":"258","line":14,"column":26,"nodeType":"228","messageId":"229","endLine":14,"endColumn":43},{"ruleId":"226","severity":1,"message":"259","line":20,"column":9,"nodeType":"228","messageId":"229","endLine":20,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":136,"column":25,"nodeType":"262","messageId":"263","endLine":136,"endColumn":27},{"ruleId":"226","severity":1,"message":"264","line":21,"column":12,"nodeType":"228","messageId":"229","endLine":21,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":22,"column":12,"nodeType":"228","messageId":"229","endLine":22,"endColumn":23},{"ruleId":"226","severity":1,"message":"256","line":8,"column":10,"nodeType":"228","messageId":"229","endLine":8,"endColumn":18},{"ruleId":"226","severity":1,"message":"259","line":18,"column":9,"nodeType":"228","messageId":"229","endLine":18,"endColumn":18},{"ruleId":"226","severity":1,"message":"265","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":18},{"ruleId":"226","severity":1,"message":"264","line":21,"column":12,"nodeType":"228","messageId":"229","endLine":21,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":22,"column":12,"nodeType":"228","messageId":"229","endLine":22,"endColumn":23},{"ruleId":"266","severity":1,"message":"267","line":38,"column":6,"nodeType":"268","endLine":38,"endColumn":8,"suggestions":"269"},{"ruleId":"226","severity":1,"message":"264","line":20,"column":12,"nodeType":"228","messageId":"229","endLine":20,"endColumn":23},{"ruleId":"226","severity":1,"message":"270","line":1,"column":38,"nodeType":"228","messageId":"229","endLine":1,"endColumn":45},{"ruleId":"226","severity":1,"message":"255","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":13},{"ruleId":"226","severity":1,"message":"256","line":8,"column":10,"nodeType":"228","messageId":"229","endLine":8,"endColumn":18},{"ruleId":"226","severity":1,"message":"257","line":17,"column":10,"nodeType":"228","messageId":"229","endLine":17,"endColumn":24},{"ruleId":"226","severity":1,"message":"258","line":17,"column":26,"nodeType":"228","messageId":"229","endLine":17,"endColumn":43},{"ruleId":"260","severity":1,"message":"271","line":26,"column":17,"nodeType":"262","messageId":"263","endLine":26,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":113,"column":26,"nodeType":"262","messageId":"263","endLine":113,"endColumn":28},{"ruleId":"226","severity":1,"message":"272","line":8,"column":8,"nodeType":"228","messageId":"229","endLine":8,"endColumn":13},{"ruleId":"226","severity":1,"message":"264","line":18,"column":12,"nodeType":"228","messageId":"229","endLine":18,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":123,"column":31,"nodeType":"275","messageId":"276","endLine":123,"endColumn":146,"fix":"277"},{"ruleId":"226","severity":1,"message":"240","line":2,"column":17,"nodeType":"228","messageId":"229","endLine":2,"endColumn":26},{"ruleId":"226","severity":1,"message":"278","line":7,"column":10,"nodeType":"228","messageId":"229","endLine":7,"endColumn":20},{"ruleId":"226","severity":1,"message":"255","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":13},{"ruleId":"226","severity":1,"message":"279","line":35,"column":9,"nodeType":"228","messageId":"229","endLine":35,"endColumn":19},{"ruleId":"226","severity":1,"message":"280","line":42,"column":9,"nodeType":"228","messageId":"229","endLine":42,"endColumn":20},{"ruleId":"226","severity":1,"message":"281","line":65,"column":9,"nodeType":"228","messageId":"229","endLine":65,"endColumn":21},{"ruleId":"226","severity":1,"message":"282","line":78,"column":9,"nodeType":"228","messageId":"229","endLine":78,"endColumn":21},{"ruleId":"260","severity":1,"message":"261","line":166,"column":31,"nodeType":"262","messageId":"263","endLine":166,"endColumn":33},{"ruleId":"260","severity":1,"message":"261","line":168,"column":32,"nodeType":"262","messageId":"263","endLine":168,"endColumn":34},{"ruleId":"226","severity":1,"message":"255","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":13},{"ruleId":"226","severity":1,"message":"257","line":16,"column":10,"nodeType":"228","messageId":"229","endLine":16,"endColumn":24},{"ruleId":"226","severity":1,"message":"258","line":16,"column":26,"nodeType":"228","messageId":"229","endLine":16,"endColumn":43},{"ruleId":"226","severity":1,"message":"279","line":42,"column":9,"nodeType":"228","messageId":"229","endLine":42,"endColumn":19},{"ruleId":"226","severity":1,"message":"264","line":21,"column":12,"nodeType":"228","messageId":"229","endLine":21,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":22,"column":12,"nodeType":"228","messageId":"229","endLine":22,"endColumn":23},{"ruleId":"226","severity":1,"message":"264","line":24,"column":12,"nodeType":"228","messageId":"229","endLine":24,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":25,"column":12,"nodeType":"228","messageId":"229","endLine":25,"endColumn":23},"no-unused-vars","'showLoading' is assigned a value but never used.","Identifier","unusedVar","'setShowLoading' is assigned a value but never used.","'onEmployee' is assigned a value but never used.","'onLogOut' is assigned a value but never used.","'onLogistics' is assigned a value but never used.","'onTask' is assigned a value but never used.","'onBonus' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'datas' is assigned a value but never used.","'design' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Dashboard' is defined but never used.","'Table' is defined but never used.","'parseISO' is defined but never used.","'panelCollapsed' is assigned a value but never used.","'setpanelCollapsed' is assigned a value but never used.","'fetchData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setShowData' is assigned a value but never used.","'Calendar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'useMemo' is defined but never used.","Expected '!==' and instead saw '!='.","'Image' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"284","text":"285"},"'classNames' is defined but never used.","'showDetail' is assigned a value but never used.","'AddEmployee' is assigned a value but never used.","'EditEmployee' is assigned a value but never used.","'selectedItem' is assigned a value but never used.",{"desc":"286","fix":"287"},[6908,6908]," rel=\"noreferrer\"","Update the dependencies array to be: [options]",{"range":"288","text":"289"},[1025,1027],"[options]"]
>>>>>>> c4b7c38cfb2988b9d84d257f9d87ecac908891a5
