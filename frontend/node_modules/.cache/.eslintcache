<<<<<<< HEAD
[{"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\index.js":"1","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js":"3","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\App.js":"4","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\login.js":"5","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\routes\\index.js":"6","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js":"7","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js":"8","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js":"9","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js":"10","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js":"11","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js":"12","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js":"13","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js":"14","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js":"15","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js":"16","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js":"17","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\tasks.js":"18","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\add_task.js":"19","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\view_task.js":"20"},{"size":665,"mtime":1673370399820,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1673018018067,"results":"23","hashOfConfig":"22"},{"size":535,"mtime":1673358829451,"results":"24","hashOfConfig":"22"},{"size":2437,"mtime":1673622388098,"results":"25","hashOfConfig":"22"},{"size":4009,"mtime":1673603302943,"results":"26","hashOfConfig":"22"},{"size":1282,"mtime":1673637615134,"results":"27","hashOfConfig":"22"},{"size":210,"mtime":1673444564995,"results":"28","hashOfConfig":"22"},{"size":1642,"mtime":1673557552333,"results":"29","hashOfConfig":"22"},{"size":1218,"mtime":1673557552331,"results":"30","hashOfConfig":"22"},{"size":1014,"mtime":1673634121525,"results":"31","hashOfConfig":"22"},{"size":11946,"mtime":1673599042649,"results":"32","hashOfConfig":"22"},{"size":1876,"mtime":1673643683164,"results":"33","hashOfConfig":"22"},{"size":12345,"mtime":1673690245937,"results":"34","hashOfConfig":"22"},{"size":4325,"mtime":1673637536482,"results":"35","hashOfConfig":"22"},{"size":6719,"mtime":1673608675724,"results":"36","hashOfConfig":"22"},{"size":2631,"mtime":1673608586803,"results":"37","hashOfConfig":"22"},{"size":3666,"mtime":1673608720784,"results":"38","hashOfConfig":"22"},{"size":4444,"mtime":1673637449701,"results":"39","hashOfConfig":"22"},{"size":8826,"mtime":1673693519427,"results":"40","hashOfConfig":"22"},{"size":0,"mtime":1673623470388,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1afnnh1",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"45"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"45"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\index.js",[],[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\App.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\login.js",["108","109","110","111"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../style.css\";\r\nimport Image from \"./assets/login-img.jpg\";\r\nimport constants from './../utilities/constants';\r\nimport axios from \"axios\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\nfunction Login(props) {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     var em = document.getElementById(\"forEmail\").value;\r\n  //     var pass = document.getElementById(\"forPass\").value;\r\n  //     const result = await axios(constant.login + `?email=${em}&password=${pass}`);\r\n  //     setData(result.data.details);\r\n  //     //console.log(result)\r\n  //     setShowLoading(false);\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  const onSubmit = async () => {\r\n    var em = document.getElementById(\"forEmail\").value;\r\n    var pass = document.getElementById(\"forPass\").value;\r\n    let design;\r\n    const result = await axios(constant.login + `?email=${em}&password=${pass}`);\r\n    setData(result.data.details);\r\n    setShowLoading(false);\r\n    {\r\n      data.map((item) => {\r\n        if (em === item.email) {\r\n          design = item.designation\r\n        }\r\n      })\r\n    }\r\n\r\n    (data.length > 0 ?\r\n      (design === \"admin\") ?\r\n        props.history.push({\r\n          pathname: 'App'\r\n        })\r\n        : alert(\"Not an Admin.\")\r\n      : alert(\"Account does not exist.\")\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <section className=\"vh-100\">\r\n        <div className=\"container-fluid bg-dark\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 text-black\">\r\n              <div className=\"px-5 ms-xl-4\">\r\n                <i\r\n                  className=\"fas fa-crow fa-2x me-3 pt-5 mt-xl-4\"\r\n                  style={{ color: \"#709085\" }}\r\n                />\r\n                <h1 style={{ color: \"#e6e6e6\", fontSize: \"70px\", marginBottom: \"0px\", marginTop: \"80px\" }}>\r\n                  MATRIX MS\r\n                </h1>\r\n              </div>\r\n              <div style={{ marginTop: \"50px\" }} className=\"d-flex align-items-center px-5 ms-xl-4 pt-xl-0\">\r\n                <form style={{ width: \"23rem\" }}>\r\n                  <div className=\"form-outline mb-4\">\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"forEmail\"\r\n                      placeholder=\"Email\"\r\n                      className=\"form-control form-control-lg\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-outline mb-4\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"forPass\"\r\n                      placeholder=\"Password\"\r\n                      className=\"form-control form-control-lg\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <br />\r\n                    <button\r\n                      className=\"btn btn-outline-info btn-lg btn-block\"\r\n                      type=\"button\" onClick={() => { onSubmit() }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                  <br />\r\n                  <label id=\"err\">aa</label>\r\n                  <br />{\" \"}\r\n                  <p className=\"small mb-5 pb-lg-2\">\r\n                    <a className=\"text-muted\" href=\"#!\">\r\n                      Forgot password?\r\n                    </a>\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-6 px-0 d-none d-sm-block\">\r\n              <img\r\n                src={Image}\r\n                alt=\"\"\r\n                className=\"w-100 vh-100\"\r\n                style={{ objectFit: \"cover\", objectPosition: \"left\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\routes\\index.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js",["112"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js",["113","114","115","116"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js",["117"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { withRouter ,useLocation} from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\n\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nconst constant = constants.getConstant();\r\nfunction Show(props) {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  \r\n  const location = useLocation();\r\n \r\n  const options = {\r\n    method: 'GET',\r\n    url: constant.empView,\r\n    params: {  id : location.id },\r\n    headers: {\r\n        'content-type': 'application/json',\r\n        'X-RapidAPI-Key': 'your-rapidapi-key',\r\n        'X-RapidAPI-Host': 'microsoft-translator-text.p.rapidapi.com',\r\n    },\r\n      \r\n};\r\n  useEffect(() => {\r\n   \r\n    const fetchData = async () => {\r\n      const result = await axios.request(options);\r\n      setData(result.data);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner> }\r\n      <h2>Employee View</h2>\r\n      <Jumbotron>   \r\n  {data.map((item,i) => (\r\n <div key={i}>\r\n\r\n   <h4><b>Name: </b>{item.name} </h4>  \r\n  <h4><b>Designation: </b>{item.designation}</h4> \r\n  <h4><b>Email: </b>{item.email}</h4> \r\n  <h4><b>Password: </b>{item.password}</h4> \r\n  <h4><b>Phone: </b>{item.phone}</h4> \r\n  <h4><b>Salary: </b>{item.salary}</h4> \r\n  <h4><b>Address: </b>{item.address}</h4> \r\n  <h4><b>Cnic: </b>{item.cnic}</h4> \r\n  <h4><b>Date of birth: </b>{item.date_of_birth}</h4> \r\n  <h4><b>Department: </b>{item.department}</h4> \r\n  <h4><b>Gender: </b>{item.gender}</h4> \r\n   </div>  \r\n    ))}\r\n  </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Show);","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js",["118"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js",["119"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { classNames } from 'primereact/utils';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\nconst constant = constants.getConstant();\r\nexport const AddLogs = (props) => {\r\n    // const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [setShowData, setFormData] = useState({});\r\n    // const countryservice = new CountryService();\r\n    const defaultValues = {\r\n        name: '',\r\n        amount: '',\r\n        delivery_date: '',\r\n        delivery_status: '',\r\n        location: ''\r\n    }\r\n    useEffect(() => {\r\n        // countryservice.getCountries().then(data => setCountries(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\r\n    const onSubmit = (data) => {\r\n        setFormData(data);\r\n\r\n        axios.post(constant.logList, data)\r\n            .then((result) => {\r\n                setShowMessage(true)\r\n            }).catch((error) => setShowMessage(false));\r\n        reset();\r\n    };\r\n\r\n    const LogisticsList = () => {\r\n        props.history.push({\r\n            pathname: '/logistics/',\r\n        });\r\n    }\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\">\r\n        <Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => LogisticsList()} /></div>;\r\n    \r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }} ></i>\r\n                    <h5>Submission Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n                        Logistics Details successfully added!\r\n                    </p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"flex justify-content-center\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"text-center\">Logistics Details Submission</h5>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"p-fluid\">\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"name\" control={control} rules={{ required: 'Name is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.name} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': errors.name })}>Vendor Name*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"amount\" control={control} rules={{ required: 'Amount is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.amount} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"amount\" className={classNames({ 'p-error': errors.amount })}>Amount*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('amount')}\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_date\" control={control} render={({ field }) => (\r\n                                    <Calendar id={field.delivery_date} value={field.value} onChange={(e) => field.onChange(e.value)} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                )} />\r\n                                <label htmlFor=\"delivery_date\">Delivery Date</label>\r\n                            </span>\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_status\" control={control} rules={{ required: 'Delivery Status is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.delivery_status} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"delivery_status\" className={classNames({ 'p-error': errors.delivery_status })}>Delivery Status*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('delivery_status')}\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"location\" control={control} rules={{ required: 'Location is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.location} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"location\" className={classNames({ 'p-error': errors.location })}>Location*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('location')}\r\n                        </div><br></br>\r\n\r\n                        <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddLogs);","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js",[],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js",["120"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { classNames } from 'primereact/utils';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter,useLocation } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\n\r\nconst constant = constants.getConstant();\r\n\r\nexport const EditLogistics = (props) => {\r\n    const location = useLocation();\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    let defaultValues = location.data.logs;\r\n\r\n    const delivery_status = [\r\n        {label: 'Pending', value: 'pending'},\r\n        {label: 'Delivered', value: 'delivered'}\r\n    ];\r\n\r\n    const onSubmit = (data) => {\r\n        axios.put(constant.logList+`?id=${data._id}`, data)\r\n          .then((result) => {\r\n            setShowMessage(true)\r\n          }).catch((error) => setShowMessage(false));\r\n        \r\n    };\r\n    const LogisticsList = () => {\r\n        props.history.push({\r\n          pathname: '/logistics/',\r\n        });\r\n      }\r\n\r\n\r\n      const { control, formState: { errors }, handleSubmit } = useForm({ defaultValues });\r\n    \r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\"><Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => LogisticsList()} /></div>;\r\n    \r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }}></i>\r\n                    <h5>Submission Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n                       Your Delivery Status has been Updated successfully\r\n                    </p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"flex justify-content-center\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"text-center\">Update Delivery Status</h5>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"p-fluid\">\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_status\" control={control} rules={{ required: 'Delivery Status is required.' }} render={({ field }) => (\r\n                                   <Dropdown id={field._id}  value={field.value} options={delivery_status} onChange={(e) => field.onChange(e.value)} placeholder=\"Select a Delivery Status\"/>\r\n                                )} />\r\n                                <label htmlFor=\"delivery_status\" className={classNames({ 'p-error': errors.delivery_status })}>Delivery Status*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('delivery_status')}\r\n                        </div><br></br>\r\n                       \r\n                     <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(EditLogistics);      ","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\tasks.js",["121"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Button } from 'primereact/button';\r\nimport constants from '../../utilities/constants';\r\nimport { parseISO } from \"date-fns\"\r\nimport { Dialog } from 'primereact/dialog';\r\nimport '../../css/style.css';\r\nconst constant = constants.getConstant();\r\nfunction TaskList(props) {\r\n  const [data, setData] = useState([]);\r\n  const [deleteId, setDeleteId] = useState({});\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  const fetchData = e => {\r\n    const query = e.target.value\r\n    fetch(constant.taskList + `?name=${query}`)\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        setData(data.taskList)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.taskList);\r\n      setData(result.data.taskList);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const showDetail = (id) => {\r\n    props.history.push({\r\n      pathname: '/view_task/',\r\n      id: id\r\n    });\r\n  }\r\n  const AddTask = () => {\r\n    props.history.push({\r\n      pathname: '/add_task/',\r\n    });\r\n  }\r\n  const deleteData = () => {\r\n\r\n    let id = deleteId;\r\n    axios.delete(constant.taskList + `?id=${id}`)\r\n      .then((result) => {\r\n        setShowMessage(false);\r\n        axios.get(constant.taskList)\r\n          .then((result) => {\r\n            setData(result.data.taskList);\r\n\r\n          }).catch((error) => setShowMessage(false));\r\n\r\n      }).catch((error) => setShowMessage(false));\r\n\r\n  }\r\n\r\n\r\n  // const EditEmployee = (item) => {\r\n  //   item['date_of_birth'] = parseISO(item.date_of_birth);\r\n  //   let Employee_Edit = {\r\n\r\n  //     emp: Object.assign({}, item),\r\n\r\n  //   }\r\n  // }\r\n\r\n  const selectedItem = (id) => {\r\n    setDeleteId(id);\r\n    setShowMessage(true)\r\n  }\r\n  const dialogFooter = <div className=\"flex justify-content-center\">\r\n  <Button label=\"Yes\" className=\"p-button-danger\" autoFocus onClick={() => deleteData()} />\r\n  <Button label=\"No\" className=\"p-button-warning\" autoFocus onClick={() => setShowMessage(false)} />\r\n</div>;\r\n  return (\r\n\r\n    <div className=\"form-demo\">\r\n     <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n        <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n\r\n          <h5>Are you sure you want to Delete?</h5>\r\n          <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n            Your Employee is Updated successfully\r\n          </p>\r\n        </div>\r\n      </Dialog>\r\n      <h2>Task List</h2>\r\n      <div>\r\n        <input onChange={fetchData} label=\"Search User\" />\r\n      </div>\r\n      <div>\r\n        <br></br><p>\r\n          <Button onClick={() => { AddTask() }}>Add Task</Button>\r\n        </p>\r\n      </div>\r\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Task Name</th>\r\n            <th scope=\"col\">Employee Name</th>\r\n            <th scope=\"col\">Employee Designation</th>\r\n            <th scope=\"col\">Employee Department</th>\r\n            <th scope=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, i) => (\r\n            <tr key={i}>\r\n              <th scope=\"row\" >{i + 1}</th>\r\n              <td >{item.name}</td>\r\n              <td >{item.taskdetails[0].name}</td>\r\n              <td >{item.taskdetails[0].designation}</td>\r\n              <td >{item.taskdetails[0].department}</td>\r\n              <td>\r\n                <Button onClick={() => { showDetail(item._id) }} className=\"p-button-success\">View</Button>\r\n                <Button className=\"p-button-warning\">Completed</Button>\r\n                <Button className=\"p-button-danger\" onClick={() => { selectedItem(item._id) }}>Delete</Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(TaskList);","C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\add_task.js",["122","123","124"],[],"C:\\Users\\BN GAMING\\Desktop\\Project\\Matrix-MERN-App\\frontend\\src\\container\\task\\view_task.js",[],[],{"ruleId":"125","severity":1,"message":"126","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"129","line":12,"column":10,"nodeType":"127","messageId":"128","endLine":12,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":34,"column":5,"nodeType":"132","messageId":"133","endLine":40,"endColumn":6},{"ruleId":"134","severity":1,"message":"135","line":35,"column":23,"nodeType":"136","messageId":"137","endLine":35,"endColumn":25},{"ruleId":"125","severity":1,"message":"138","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":15},{"ruleId":"125","severity":1,"message":"139","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"138","line":2,"column":18,"nodeType":"127","messageId":"128","endLine":2,"endColumn":23},{"ruleId":"125","severity":1,"message":"140","line":2,"column":25,"nodeType":"127","messageId":"128","endLine":2,"endColumn":29},{"ruleId":"125","severity":1,"message":"141","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":38,"column":6,"nodeType":"144","endLine":38,"endColumn":8,"suggestions":"145"},{"ruleId":"125","severity":1,"message":"146","line":20,"column":12,"nodeType":"127","messageId":"128","endLine":20,"endColumn":23},{"ruleId":"125","severity":1,"message":"146","line":17,"column":12,"nodeType":"127","messageId":"128","endLine":17,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":2,"column":17,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"147","line":8,"column":10,"nodeType":"127","messageId":"128","endLine":8,"endColumn":18},{"ruleId":"125","severity":1,"message":"146","line":21,"column":12,"nodeType":"127","messageId":"128","endLine":21,"endColumn":23},{"ruleId":"125","severity":1,"message":"129","line":22,"column":12,"nodeType":"127","messageId":"128","endLine":22,"endColumn":23},{"ruleId":"125","severity":1,"message":"148","line":46,"column":59,"nodeType":"127","messageId":"128","endLine":46,"endColumn":64},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'showLoading' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Dashboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'setShowData' is assigned a value but never used.","'parseISO' is defined but never used.","'reset' is assigned a value but never used.",{"desc":"150","fix":"151"},"Update the dependencies array to be: [options]",{"range":"152","text":"153"},[1025,1027],"[options]"]
=======
[{"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\App.js":"1","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\components\\login.js":"2","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js":"3","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js":"4","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js":"5","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\index.js":"6","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js":"7","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js":"8","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\routes\\index.js":"9","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js":"10","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js":"11","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js":"12","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js":"13","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js":"14","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js":"15","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js":"16","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js":"17","D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\supervisor\\sup_sidebar.js":"18"},{"size":1853,"mtime":1673687485517,"results":"19","hashOfConfig":"20"},{"size":4314,"mtime":1673685341804,"results":"21","hashOfConfig":"20"},{"size":6932,"mtime":1673633075334,"results":"22","hashOfConfig":"20"},{"size":4295,"mtime":1673642917886,"results":"23","hashOfConfig":"20"},{"size":2399,"mtime":1673686954305,"results":"24","hashOfConfig":"20"},{"size":665,"mtime":1673624518804,"results":"25","hashOfConfig":"20"},{"size":535,"mtime":1673627117149,"results":"26","hashOfConfig":"20"},{"size":375,"mtime":1673367169759,"results":"27","hashOfConfig":"20"},{"size":1061,"mtime":1673686022598,"results":"28","hashOfConfig":"20"},{"size":210,"mtime":1673448107593,"results":"29","hashOfConfig":"20"},{"size":2274,"mtime":1673686962671,"results":"30","hashOfConfig":"20"},{"size":896,"mtime":1673685941127,"results":"31","hashOfConfig":"20"},{"size":12198,"mtime":1673601880709,"results":"32","hashOfConfig":"20"},{"size":1695,"mtime":1673601880715,"results":"33","hashOfConfig":"20"},{"size":11946,"mtime":1673615568851,"results":"34","hashOfConfig":"20"},{"size":3666,"mtime":1673614731779,"results":"35","hashOfConfig":"20"},{"size":2730,"mtime":1673687415908,"results":"36","hashOfConfig":"20"},{"size":2532,"mtime":1673687175529,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2vs210",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\App.js",["94","95","96","97","98","99"],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\components\\login.js",["100","101","102","103","104"],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\logs\\add_logs.js",["105"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { classNames } from 'primereact/utils';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport axios from 'axios';\r\nimport '../../css/style.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\nconst constant = constants.getConstant();\r\nexport const AddLogs = (props) => {\r\n    // const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [setShowData, setFormData] = useState({});\r\n    // const countryservice = new CountryService();\r\n    const defaultValues = {\r\n        name: '',\r\n        amount: '',\r\n        delivery_date: '',\r\n        delivery_status: '',\r\n        location: ''\r\n    }\r\n\r\n    const delivery_status = [\r\n        {label: 'Pending', value: 'pending'},\r\n        {label: 'Delivered', value: 'delivered'}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // countryservice.getCountries().then(data => setCountries(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        setFormData(data);\r\n\r\n        axios.post(constant.logList, data)\r\n            .then((result) => {\r\n                setShowMessage(true)\r\n            }).catch((error) => setShowMessage(false));\r\n        reset();\r\n    };\r\n\r\n    const LogisticsList = () => {\r\n        props.history.push({\r\n            pathname: '/logistics/',\r\n        });\r\n    }\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\">\r\n        <Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => LogisticsList()} /></div>;\r\n    \r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }} ></i>\r\n                    <h5>Submission Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n                        Logistics Details successfully added!\r\n                    </p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"flex justify-content-center\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"text-center\">Logistics Details Submission</h5>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"p-fluid\">\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"name\" control={control} rules={{ required: 'Name is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.name} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': errors.name })}>Vendor Name*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"amount\" control={control} rules={{ required: 'Amount is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.amount} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"amount\" className={classNames({ 'p-error': errors.amount })}>Amount*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('amount')}\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_date\" control={control} render={({ field }) => (\r\n                                    <Calendar id={field.delivery_date} value={field.value} onChange={(e) => field.onChange(e.value)} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                )} />\r\n                                <label htmlFor=\"delivery_date\">Delivery Date</label>\r\n                            </span>\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"delivery_status\" control={control} rules={{ required: 'Delivery Status is required.' }} render={({ field }) => (\r\n                                   <Dropdown id={field._id}  value={field.value} options={delivery_status} onChange={(e) => field.onChange(e.value)} placeholder=\"Select a Delivery Status\"/>\r\n                                )} />\r\n                                <label htmlFor=\"delivery_status\" className={classNames({ 'p-error': errors.delivery_status })}>Delivery Status*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('delivery_status')}\r\n                        </div><br></br>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"location\" control={control} rules={{ required: 'Location is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.location} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"location\" className={classNames({ 'p-error': errors.location })}>Location*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('location')}\r\n                        </div><br></br>\r\n\r\n                        <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddLogs);",[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\empList.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\emp_sidebar.js",["106","107"],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\index.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\AppWrapper.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\reportWebVitals.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\routes\\index.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\Dashboard.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\components\\it-dept\\it-sidebar.js",["108","109","110","111","112"],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\utilities\\constants.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\add_emp.js",["113"],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\show_detail.js",["114"],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\emp\\edit_emp.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\logs\\edit_logs.js",["115"],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\logs\\logistics.js",[],[],"D:\\University\\5th Semester\\Software Construction Lab\\MATRIX PROJECT\\Matrix-MERN-App\\frontend\\src\\container\\supervisor\\sup_sidebar.js",["116","117"],[],{"ruleId":"118","severity":1,"message":"119","line":22,"column":10,"nodeType":"120","messageId":"121","endLine":22,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":22,"column":23,"nodeType":"120","messageId":"121","endLine":22,"endColumn":37},{"ruleId":"118","severity":1,"message":"123","line":32,"column":9,"nodeType":"120","messageId":"121","endLine":32,"endColumn":19},{"ruleId":"118","severity":1,"message":"124","line":36,"column":9,"nodeType":"120","messageId":"121","endLine":36,"endColumn":17},{"ruleId":"118","severity":1,"message":"125","line":41,"column":9,"nodeType":"120","messageId":"121","endLine":41,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":56,"column":36,"nodeType":"128","messageId":"129","endLine":56,"endColumn":37},{"ruleId":"118","severity":1,"message":"130","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"131","line":13,"column":7,"nodeType":"120","messageId":"121","endLine":13,"endColumn":12},{"ruleId":"118","severity":1,"message":"132","line":41,"column":9,"nodeType":"120","messageId":"121","endLine":41,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":44,"column":5,"nodeType":"135","messageId":"136","endLine":50,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":45,"column":23,"nodeType":"139","messageId":"140","endLine":45,"endColumn":25},{"ruleId":"118","severity":1,"message":"141","line":18,"column":12,"nodeType":"120","messageId":"121","endLine":18,"endColumn":23},{"ruleId":"118","severity":1,"message":"142","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":57,"column":34,"nodeType":"128","messageId":"129","endLine":57,"endColumn":35},{"ruleId":"118","severity":1,"message":"143","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"142","line":2,"column":18,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"144","line":2,"column":25,"nodeType":"120","messageId":"121","endLine":2,"endColumn":29},{"ruleId":"118","severity":1,"message":"145","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":56,"column":34,"nodeType":"128","messageId":"129","endLine":56,"endColumn":35},{"ruleId":"118","severity":1,"message":"141","line":20,"column":12,"nodeType":"120","messageId":"121","endLine":20,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":38,"column":6,"nodeType":"148","endLine":38,"endColumn":8,"suggestions":"149"},{"ruleId":"118","severity":1,"message":"130","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"142","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":58,"column":34,"nodeType":"128","messageId":"129","endLine":58,"endColumn":35},"no-unused-vars","'showLoading' is assigned a value but never used.","Identifier","unusedVar","'setShowLoading' is assigned a value but never used.","'onEmployee' is assigned a value but never used.","'onLogOut' is assigned a value but never used.","'onLogistics' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'datas' is assigned a value but never used.","'design' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setShowData' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Dashboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["150"],{"desc":"151","fix":"152"},"Update the dependencies array to be: [options]",{"range":"153","text":"154"},[1025,1027],"[options]"]
>>>>>>> f6cf5b182558b06d13ab04db91a9c4921a5f8724
