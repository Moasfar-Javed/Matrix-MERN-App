{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BN GAMING\\\\Desktop\\\\Project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\task\\\\view_task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport constants from '../../utilities/constants';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constant = constants.getConstant();\nfunction Show(props) {\n  _s();\n  const [data, setData] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const location = useLocation();\n\n  //setData(location.task.taskview);\n  console.log(location.task.taskview);\n  //   const options = {\n  //     method: 'GET',\n  //     url: constant.empView,\n  //     params: {  id : location.id },\n  //     headers: {\n  //         'content-type': 'application/json',\n  //         'X-RapidAPI-Key': 'your-rapidapi-key',\n  //         'X-RapidAPI-Host': 'microsoft-translator-text.p.rapidapi.com',\n  //     },\n\n  useEffect(() => {\n\n    // const fetchData = async () => {\n    //   const result = await axios.request(options);\n    //   setData(result.data);\n    //   setShowLoading(false);\n    // };\n\n    // fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Show, \"VuBwMNGxyKX3R43hKkSw5FfA0dU=\", false, function () {\n  return [useLocation];\n});\n_c = Show;\n;\nexport default _c2 = withRouter(Show);\nvar _c, _c2;\n$RefreshReg$(_c, \"Show\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","axios","Spinner","withRouter","useLocation","constants","Jumbotron","constant","getConstant","Show","props","data","setData","showLoading","setShowLoading","location","console","log","task","taskview"],"sources":["C:/Users/BN GAMING/Desktop/Project/Matrix-MERN-App/frontend/src/container/task/view_task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter ,useLocation} from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nconst constant = constants.getConstant();\r\n\r\nfunction Show(props) {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  \r\n  const location = useLocation();\r\n  \r\n  \r\n  //setData(location.task.taskview);\r\n  console.log(location.task.taskview);\r\n//   const options = {\r\n//     method: 'GET',\r\n//     url: constant.empView,\r\n//     params: {  id : location.id },\r\n//     headers: {\r\n//         'content-type': 'application/json',\r\n//         'X-RapidAPI-Key': 'your-rapidapi-key',\r\n//         'X-RapidAPI-Host': 'microsoft-translator-text.p.rapidapi.com',\r\n//     },\r\n      \r\n\r\n  useEffect(() => {\r\n   \r\n    // const fetchData = async () => {\r\n    //   const result = await axios.request(options);\r\n    //   setData(result.data);\r\n    //   setShowLoading(false);\r\n    // };\r\n\r\n    // fetchData();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <h2>Task View</h2>\r\n      <Jumbotron>   \r\n\r\n{/* \r\n   <h4><b>Name: </b>{data.name} </h4>  \r\n  <h4><b>Task Description: </b>{data.description}</h4> \r\n  <h4><b>Task status: </b>{data.status}</h4> \r\n  <h4><b>Task Assign Date: </b>{data.assign_date}</h4> \r\n  <h4><b>Task Deadline Date: </b>{data.deadline}</h4> \r\n  <h4><b>Assigned Employee name: </b>{data.taskdetails[0].name}</h4> \r\n  <h4><b>Emplyoee Department: </b>{data.taskdetails[0].department}</h4> \r\n  <h4><b>Employee Designation: </b>{data.taskdetails[0].designation}</h4> \r\n   */}\r\n  \r\n  </Jumbotron>\r\n  </div> \r\n  );\r\n  };\r\n\r\nexport default withRouter(Show);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAASC,UAAU,EAAEC,WAAW,QAAO,kBAAkB;AACzD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAClD,MAAMC,QAAQ,GAAGF,SAAS,CAACG,WAAW,EAAE;AAExC,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMgB,QAAQ,GAAGX,WAAW,EAAE;;EAG9B;EACAY,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAAC;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGEnB,SAAS,CAAC,MAAM;;IAEd;IACA;IACA;IACA;IACA;;IAEA;EAAA,CAED,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBAEE;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAaF;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEN;AAAC,GApDMS,IAAI;EAAA,QAIML,WAAW;AAAA;AAAA,KAJrBK,IAAI;AAoDV;AAEH,qBAAeN,UAAU,CAACM,IAAI,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}