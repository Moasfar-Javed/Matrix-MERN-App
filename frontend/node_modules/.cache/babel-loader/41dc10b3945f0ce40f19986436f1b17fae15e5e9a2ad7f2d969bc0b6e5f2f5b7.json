{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\5th Semester\\\\Software Construction Lab\\\\project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\graphs\\\\graphMain.js\",\n  _s = $RefreshSig$();\nimport \"./../../css/style.css\";\nimport \"./../../css/bootstrap.min.css\";\nimport { Button } from \"primereact/button\";\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\nimport { Chart } from \"primereact/chart\";\nimport axios from \"axios\";\nimport constants from \"../../utilities/constants\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constant = constants.getConstant();\nvar forName = [];\nvar forAmount = [];\nvar forBatchName = [];\nvar forTotalPurity = [];\nvar forBatchAmount = [];\nfunction Graph() {\n  _s();\n  const [data, setData] = useState([]);\n  const [seed, setseed] = useState([]);\n  const [purt, setpurt] = useState([]);\n  const [chart, setchart] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  let charname = \"\";\n  let graphname = \"\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(constant.logList);\n      setData(result.data.logistics);\n      setShowLoading(false);\n    };\n    const fetchPurityData = async () => {\n      const result = await axios(constant.refineryList);\n      setseed(result.data.purityList);\n      setShowLoading(false);\n    };\n    fetchData();\n    fetchPurityData();\n  }, []);\n  const onLogs = () => {\n    charname = \"logistics\";\n    setchart(charname);\n  };\n  const onSeedBatch = () => {\n    charname = \"seedbatch\";\n    setchart(charname);\n  };\n  const onPurity = () => {\n    charname = \"purity\";\n    setchart(charname);\n  };\n  const onBar = () => {\n    charname = \"purity\";\n    setchart(charname);\n  };\n  const onPolar = () => {\n    charname = \"purity\";\n    setchart(charname);\n  };\n  const [basicData] = useState({\n    labels: forName,\n    datasets: [{\n      label: \"Vendor Name x Amount\",\n      backgroundColor: \"#fc8c03\",\n      data: forAmount\n    }]\n  });\n  const getLightTheme = () => {\n    let basicOptions = {\n      maintainAspectRatio: false,\n      aspectRatio: 0.8,\n      plugins: {\n        legend: {\n          labels: {\n            color: \"#495057\"\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        },\n        y: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        }\n      }\n    };\n    return {\n      basicOptions\n    };\n  };\n  const {\n    basicOptions\n  } = getLightTheme();\n  const [basicData1] = useState({\n    labels: forBatchName,\n    datasets: [{\n      label: \"Batch Name x Total Purity Score\",\n      backgroundColor: \"#b6fc03\",\n      data: forTotalPurity\n    }]\n  });\n  const getLightTheme1 = () => {\n    let basicOptions = {\n      maintainAspectRatio: false,\n      aspectRatio: 0.8,\n      plugins: {\n        legend: {\n          labels: {\n            color: \"#495057\"\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        },\n        y: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        }\n      }\n    };\n    return {\n      basicOptions\n    };\n  };\n  const {\n    basicOptions1\n  } = getLightTheme();\n  const [basicData2] = useState({\n    labels: forBatchName,\n    datasets: [{\n      label: \"Batch Name x Amount\",\n      backgroundColor: \"#9660db\",\n      data: forBatchAmount\n    }]\n  });\n  const getLightTheme2 = () => {\n    let basicOptions = {\n      maintainAspectRatio: false,\n      aspectRatio: 0.8,\n      plugins: {\n        legend: {\n          labels: {\n            color: \"#495057\"\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        },\n        y: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        }\n      }\n    };\n    return {\n      basicOptions\n    };\n  };\n  const {\n    basicOptions2\n  } = getLightTheme();\n  const [chartData] = useState({\n    labels: forName,\n    datasets: [{\n      data: forAmount,\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n    }]\n  });\n  const [lightOptions] = useState({\n    plugins: {\n      legend: {\n        labels: {\n          color: \"#495057\"\n        }\n      }\n    }\n  });\n  const [chartData1] = useState({\n    labels: forBatchName,\n    datasets: [{\n      data: forTotalPurity,\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n    }]\n  });\n  const [lightOptions1] = useState({\n    plugins: {\n      legend: {\n        labels: {\n          color: \"#495057\"\n        }\n      }\n    }\n  });\n  const [chartData2] = useState({\n    labels: forBatchName,\n    datasets: [{\n      data: forBatchAmount,\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n    }]\n  });\n  const [lightOptions2] = useState({\n    plugins: {\n      legend: {\n        labels: {\n          color: \"#495057\"\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((item, i) => (forName[i] = item.name, forAmount[i] = item.amount, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 12\n    }, this))), seed.map((item, i) => (forBatchName[i] = item.name, forBatchAmount[i] = item.amount, forTotalPurity[i] = item.totalScore, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 12\n    }, this))), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      onClick: () => {\n        onLogs();\n      },\n      children: \"Logistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      onClick: () => {\n        onSeedBatch();\n      },\n      children: \"Seed Batch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      onClick: () => {\n        onPurity();\n      },\n      children: \"Purity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: chart === \"logistics\" ? /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"bar\",\n            data: basicData,\n            options: basicOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this) : chart === \"seedbatch\" ? /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"bar\",\n            data: basicData1,\n            options: basicOptions1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this) : chart === \"purity\" ? /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"bar\",\n            data: basicData2,\n            options: basicOptions2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: chart === \"logistics\" ? /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"doughnut\",\n            data: chartData,\n            options: lightOptions,\n            style: {\n              position: \"relative\",\n              width: \"40%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this) : chart === \"seedbatch\" ? /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"doughnut\",\n            data: chartData1,\n            options: lightOptions1,\n            style: {\n              position: \"relative\",\n              width: \"40%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this) : chart === \"purity\" ? /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"doughnut\",\n            data: chartData2,\n            options: lightOptions2,\n            style: {\n              position: \"relative\",\n              width: \"40%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        onBar();\n      },\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Bar Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        onPolar();\n      },\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"PolarArea Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"g7XA3cstUnRhCv6NeoctmQFiPeI=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Button","Jumbotron","Chart","axios","constants","useEffect","useState","constant","getConstant","forName","forAmount","forBatchName","forTotalPurity","forBatchAmount","Graph","data","setData","seed","setseed","purt","setpurt","chart","setchart","showLoading","setShowLoading","charname","graphname","fetchData","result","logList","logistics","fetchPurityData","refineryList","purityList","onLogs","onSeedBatch","onPurity","onBar","onPolar","basicData","labels","datasets","label","backgroundColor","getLightTheme","basicOptions","maintainAspectRatio","aspectRatio","plugins","legend","color","scales","x","ticks","grid","y","basicData1","getLightTheme1","basicOptions1","basicData2","getLightTheme2","basicOptions2","chartData","hoverBackgroundColor","lightOptions","chartData1","lightOptions1","chartData2","lightOptions2","map","item","i","name","amount","totalScore","marginLeft","position","width"],"sources":["D:/University/5th Semester/Software Construction Lab/project/Matrix-MERN-App/frontend/src/container/graphs/graphMain.js"],"sourcesContent":["import \"./../../css/style.css\";\r\nimport \"./../../css/bootstrap.min.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\r\nimport { Chart } from \"primereact/chart\";\r\nimport axios from \"axios\";\r\nimport constants from \"../../utilities/constants\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\nvar forName = [];\r\nvar forAmount = [];\r\n\r\nvar forBatchName = [];\r\nvar forTotalPurity = [];\r\nvar forBatchAmount = [];\r\n\r\nfunction Graph() {\r\n  const [data, setData] = useState([]);\r\n  const [seed, setseed] = useState([]);\r\n  const [purt, setpurt] = useState([]);\r\n  const [chart, setchart] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  let charname = \"\";\r\n  let graphname = \"\";\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.logList);\r\n      setData(result.data.logistics);\r\n      setShowLoading(false);\r\n    };\r\n    const fetchPurityData = async () => {\r\n      const result = await axios(constant.refineryList);\r\n      setseed(result.data.purityList);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    fetchPurityData();\r\n  }, []);\r\n\r\n  const onLogs = () => {\r\n    charname = \"logistics\";\r\n    setchart(charname);\r\n  };\r\n\r\n  const onSeedBatch = () => {\r\n    charname = \"seedbatch\";\r\n    setchart(charname);\r\n  };\r\n  const onPurity = () => {\r\n    charname = \"purity\";\r\n    setchart(charname);\r\n  };\r\n  const onBar = () => {\r\n    charname = \"purity\";\r\n    setchart(charname);\r\n  };\r\n  const onPolar = () => {\r\n    charname = \"purity\";\r\n    setchart(charname);\r\n  };\r\n\r\n\r\n  const [basicData] = useState({\r\n    labels: forName,\r\n    datasets: [\r\n      {\r\n        label: \"Vendor Name x Amount\",\r\n        backgroundColor: \"#fc8c03\",\r\n        data: forAmount,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const getLightTheme = () => {\r\n    let basicOptions = {\r\n      maintainAspectRatio: false,\r\n      aspectRatio: 0.8,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: \"#495057\",\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n    return {\r\n      basicOptions,\r\n    };\r\n  };\r\n\r\n  const { basicOptions } = getLightTheme();\r\n\r\n  const [basicData1] = useState({\r\n    labels: forBatchName,\r\n    datasets: [\r\n      {\r\n        label: \"Batch Name x Total Purity Score\",\r\n        backgroundColor: \"#b6fc03\",\r\n        data: forTotalPurity,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const getLightTheme1 = () => {\r\n    let basicOptions = {\r\n      maintainAspectRatio: false,\r\n      aspectRatio: 0.8,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: \"#495057\",\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n    return {\r\n      basicOptions,\r\n    };\r\n  };\r\n\r\n  const { basicOptions1 } = getLightTheme();\r\n\r\n  const [basicData2] = useState({\r\n    labels: forBatchName,\r\n    datasets: [\r\n      {\r\n        label: \"Batch Name x Amount\",\r\n        backgroundColor: \"#9660db\",\r\n        data: forBatchAmount,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const getLightTheme2 = () => {\r\n    let basicOptions = {\r\n      maintainAspectRatio: false,\r\n      aspectRatio: 0.8,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: \"#495057\",\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n    return {\r\n      basicOptions,\r\n    };\r\n  };\r\n\r\n  const { basicOptions2 } = getLightTheme();\r\n\r\n  const [chartData] = useState({\r\n    labels: forName,\r\n    datasets: [\r\n      {\r\n        data: forAmount,\r\n        backgroundColor: [\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n        ],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [lightOptions] = useState({\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: \"#495057\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const [chartData1] = useState({\r\n    labels: forBatchName,\r\n    datasets: [\r\n      {\r\n        data: forTotalPurity,\r\n        backgroundColor: [\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n        ],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [lightOptions1] = useState({\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: \"#495057\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const [chartData2] = useState({\r\n    labels: forBatchName,\r\n    datasets: [\r\n      {\r\n        data: forBatchAmount,\r\n        backgroundColor: [\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n          \"#FFCE56\",\r\n        ],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [lightOptions2] = useState({\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: \"#495057\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {data.map(\r\n        (item, i) => (\r\n          (forName[i] = item.name),\r\n          (forAmount[i] = item.amount),\r\n          (<span></span>)\r\n        )\r\n      )}\r\n      {seed.map(\r\n        (item, i) => (\r\n          (forBatchName[i] = item.name),\r\n          (forBatchAmount[i] = item.amount),\r\n          (forTotalPurity[i] = item.totalScore),\r\n          (<span></span>)\r\n        )\r\n      )}\r\n      <h2 className=\"mb-4\">\r\n        <b>Reports</b>\r\n      </h2>\r\n      <Button\r\n        style={{ marginLeft: \"2rem\" }}\r\n        onClick={() => {\r\n          onLogs();\r\n        }}\r\n      >\r\n        Logistics\r\n      </Button>\r\n      <Button\r\n        style={{ marginLeft: \"2rem\" }}\r\n        onClick={() => {\r\n          onSeedBatch();\r\n        }}\r\n      >\r\n        Seed Batch\r\n      </Button>\r\n      <Button\r\n        style={{ marginLeft: \"2rem\" }}\r\n        onClick={() => {\r\n          onPurity();\r\n        }}\r\n      >\r\n        Purity\r\n      </Button>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Jumbotron>\r\n        <div>\r\n          <div className=\"card\">\r\n            {chart === \"logistics\" ? (\r\n              <Chart type=\"bar\" data={basicData} options={basicOptions} />\r\n            ) : chart === \"seedbatch\" ? (\r\n              <Chart type=\"bar\" data={basicData1} options={basicOptions1} />\r\n            ) : chart === \"purity\" ? (\r\n              <Chart type=\"bar\" data={basicData2} options={basicOptions2} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n          </div>\r\n          <div className=\"card\">\r\n            {chart === \"logistics\" ? (\r\n              <Chart\r\n                type=\"doughnut\"\r\n                data={chartData}\r\n                options={lightOptions}\r\n                style={{ position: \"relative\", width: \"40%\" }}\r\n              />\r\n            ) : chart === \"seedbatch\" ? (\r\n              <Chart\r\n                type=\"doughnut\"\r\n                data={chartData1}\r\n                options={lightOptions1}\r\n                style={{ position: \"relative\", width: \"40%\" }}\r\n              />\r\n            ) : chart === \"purity\" ? (\r\n              <Chart\r\n                type=\"doughnut\"\r\n                data={chartData2}\r\n                options={lightOptions2}\r\n                style={{ position: \"relative\", width: \"40%\" }}\r\n              />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Jumbotron>\r\n      <Button\r\n        onClick={() => {\r\n          onBar();\r\n        }}\r\n        style={{ marginLeft: \"2rem\" }}\r\n      >\r\n        Bar Graph\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          onPolar();\r\n        }}\r\n        style={{ marginLeft: \"2rem\" }}\r\n      >\r\n        PolarArea Graph\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}