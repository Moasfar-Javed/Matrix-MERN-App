{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\5th Semester\\\\Software Construction Lab\\\\project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\graphs\\\\graphMain.js\",\n  _s = $RefreshSig$();\nimport \"./../../css/style.css\";\nimport \"./../../css/bootstrap.min.css\";\nimport { Button } from \"primereact/button\";\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\nimport { Chart } from \"primereact/chart\";\nimport axios from \"axios\";\nimport constants from \"../../utilities/constants\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constant = constants.getConstant();\nvar forName = [];\nvar forAmount = [];\nlet charname = \"logistics\";\nfunction Graph() {\n  _s();\n  const [data, setData] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(constant.logList);\n      setData(result.data.logistics);\n      setShowLoading(false);\n    };\n    fetchData();\n  }, []);\n  const [chartData] = useState({\n    labels: forName,\n    datasets: [{\n      type: 'line',\n      label: 'Dataset 1',\n      borderColor: '#42A5F5',\n      borderWidth: 2,\n      fill: false,\n      tension: .4,\n      data: forAmount\n    }, {\n      type: 'bar',\n      label: 'Dataset 2',\n      backgroundColor: '#66BB6A',\n      data: forAmount,\n      borderColor: 'white',\n      borderWidth: 2\n    }, {\n      type: 'bar',\n      label: 'Dataset 3',\n      backgroundColor: '#FFA726',\n      data: forAmount\n    }]\n  });\n  const [lightOptions] = useState({\n    maintainAspectRatio: false,\n    aspectRatio: .6,\n    plugins: {\n      legend: {\n        labels: {\n          color: '#495057'\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#495057'\n        },\n        grid: {\n          color: '#ebedef'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#495057'\n        },\n        grid: {\n          color: '#ebedef'\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((item, i) => (forName[i] = item.name, forAmount[i] = item.amount, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 14\n    }, this))), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Logistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Seed Batch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Purity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: forName != undefined ? /*#__PURE__*/_jsxDEV(Chart, {\n          type: \"bar\",\n          data: chartData,\n          options: lightOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Bar Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"PolarArea Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n_s(Graph, \"kpeuDdu/qhOH3C97vmLPiMFRxU4=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Button","Jumbotron","Chart","axios","constants","useEffect","useState","constant","getConstant","forName","forAmount","charname","Graph","data","setData","showLoading","setShowLoading","fetchData","result","logList","logistics","chartData","labels","datasets","type","label","borderColor","borderWidth","fill","tension","backgroundColor","lightOptions","maintainAspectRatio","aspectRatio","plugins","legend","color","scales","x","ticks","grid","y","map","item","i","name","amount","marginLeft","undefined"],"sources":["D:/University/5th Semester/Software Construction Lab/project/Matrix-MERN-App/frontend/src/container/graphs/graphMain.js"],"sourcesContent":["import \"./../../css/style.css\";\r\nimport \"./../../css/bootstrap.min.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\r\nimport { Chart } from \"primereact/chart\";\r\nimport axios from \"axios\";\r\nimport constants from \"../../utilities/constants\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\nvar forName = [];\r\nvar forAmount = [];\r\nlet charname = \"logistics\"\r\n\r\nfunction Graph() {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.logList);\r\n      setData(result.data.logistics);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, []);\r\n\r\n\r\n  const [chartData] = useState({\r\n    labels: forName,\r\n    datasets: [{\r\n        type: 'line',\r\n        label: 'Dataset 1',\r\n        borderColor: '#42A5F5',\r\n        borderWidth: 2,\r\n        fill: false,\r\n        tension: .4,\r\n        data: forAmount\r\n    }, {\r\n        type: 'bar',\r\n        label: 'Dataset 2',\r\n        backgroundColor: '#66BB6A',\r\n        data: forAmount,\r\n        borderColor: 'white',\r\n        borderWidth: 2\r\n    }, {\r\n        type: 'bar',\r\n        label: 'Dataset 3',\r\n        backgroundColor: '#FFA726',\r\n        data: forAmount\r\n    }]\r\n});\r\n\r\nconst [lightOptions] = useState({\r\n    maintainAspectRatio: false,\r\n    aspectRatio: .6,\r\n    plugins: {\r\n        legend: {\r\n            labels: {\r\n                color: '#495057'\r\n            }\r\n        }\r\n    },\r\n    scales: {\r\n        x: {\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            grid: {\r\n                color: '#ebedef'\r\n            }\r\n        },\r\n        y: {\r\n            ticks: {\r\n                color: '#495057'\r\n            },\r\n            grid: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\n  return (\r\n    (\r\n      <div>\r\n        {data.map(\r\n          (item, i) => (\r\n            (forName[i] = item.name),\r\n            (forAmount[i] = item.amount),\r\n            (<span></span>)\r\n          )\r\n        )}\r\n        <h2 className=\"mb-4\">\r\n          <b>Reports</b>\r\n        </h2>\r\n        <Button style={{ marginLeft: \"2rem\" }}>Logistics</Button>\r\n        <Button style={{ marginLeft: \"2rem\" }}>Seed Batch</Button>\r\n        <Button style={{ marginLeft: \"2rem\" }}>Purity</Button>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Jumbotron>\r\n          <div className=\"card\">\r\n            {forName != undefined ? (\r\n              <Chart type=\"bar\" data={chartData} options={lightOptions} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n          </div>\r\n        </Jumbotron>\r\n        <Button style={{ marginLeft: \"2rem\" }}>Bar Graph</Button>\r\n        <Button style={{ marginLeft: \"2rem\" }}>PolarArea Graph</Button>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAO,uBAAuB;AAC9B,OAAO,+BAA+B;AACtC,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,SAAS,MAAM,+BAA+B;AACrD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,QAAQ,GAAGH,SAAS,CAACI,WAAW,EAAE;AAExC,IAAIC,OAAO,GAAG,EAAE;AAChB,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,QAAQ,GAAG,WAAW;AAE1B,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,YAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMf,KAAK,CAACI,QAAQ,CAACY,OAAO,CAAC;MAC5CL,OAAO,CAACI,MAAM,CAACL,IAAI,CAACO,SAAS,CAAC;MAC9BJ,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDC,SAAS,EAAE;EAEb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM,CAACI,SAAS,CAAC,GAAGf,QAAQ,CAAC;IAC3BgB,MAAM,EAAEb,OAAO;IACfc,QAAQ,EAAE,CAAC;MACPC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,WAAW;MAClBC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE,KAAK;MACXC,OAAO,EAAE,EAAE;MACXhB,IAAI,EAAEH;IACV,CAAC,EAAE;MACCc,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,WAAW;MAClBK,eAAe,EAAE,SAAS;MAC1BjB,IAAI,EAAEH,SAAS;MACfgB,WAAW,EAAE,OAAO;MACpBC,WAAW,EAAE;IACjB,CAAC,EAAE;MACCH,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,WAAW;MAClBK,eAAe,EAAE,SAAS;MAC1BjB,IAAI,EAAEH;IACV,CAAC;EACL,CAAC,CAAC;EAEF,MAAM,CAACqB,YAAY,CAAC,GAAGzB,QAAQ,CAAC;IAC5B0B,mBAAmB,EAAE,KAAK;IAC1BC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJb,MAAM,EAAE;UACJc,KAAK,EAAE;QACX;MACJ;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,KAAK,EAAE;UACHH,KAAK,EAAE;QACX,CAAC;QACDI,IAAI,EAAE;UACFJ,KAAK,EAAE;QACX;MACJ,CAAC;MACDK,CAAC,EAAE;QACCF,KAAK,EAAE;UACHH,KAAK,EAAE;QACX,CAAC;QACDI,IAAI,EAAE;UACFJ,KAAK,EAAE;QACX;MACJ;IACJ;EACJ,CAAC,CAAC;EAGA,oBAEI;IAAA,WACGvB,IAAI,CAAC6B,GAAG,CACP,CAACC,IAAI,EAAEC,CAAC,MACLnC,OAAO,CAACmC,CAAC,CAAC,GAAGD,IAAI,CAACE,IAAI,EACtBnC,SAAS,CAACkC,CAAC,CAAC,GAAGD,IAAI,CAACG,MAAM,eAC1B;MAAA;MAAA;MAAA;IAAA,QAAc,CAChB,CACF,eACD;MAAI,SAAS,EAAC,MAAM;MAAA,uBAClB;QAAA,UAAG;MAAO;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACX,eACL,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACzD,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEA,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEA,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eACtD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAS,eAET,QAAC,SAAS;MAAA,uBACR;QAAK,SAAS,EAAC,MAAM;QAAA,UAClBtC,OAAO,IAAIuC,SAAS,gBACnB,QAAC,KAAK;UAAC,IAAI,EAAC,KAAK;UAAC,IAAI,EAAE3B,SAAU;UAAC,OAAO,EAAEU;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,gBAE5D;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACI,eACZ,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEgB,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACzD,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEA,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAGZ;AAAC,GAzGQnC,KAAK;AAAA,KAALA,KAAK;AA2Gd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}