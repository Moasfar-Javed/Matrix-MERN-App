{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BN GAMING\\\\Desktop\\\\Project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\emp\\\\add_emp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Calendar } from 'primereact/calendar';\nimport { Password } from 'primereact/password';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Dialog } from 'primereact/dialog';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddEmp = () => {\n  _s();\n  // const [countries, setCountries] = useState([]);\n  const [showMessage, setShowMessage] = useState(false);\n  const [formData, setFormData] = useState({});\n  // const countryservice = new CountryService();\n  const defaultValues = {\n    name: '',\n    email: '',\n    password: '',\n    date: null,\n    country: null,\n    accept: false\n  };\n  useEffect(() => {\n    // countryservice.getCountries().then(data => setCountries(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const {\n    control,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    defaultValues\n  });\n  const onSubmit = data => {\n    setFormData(data);\n    setShowLoading(true);\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/show/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n    reset();\n  };\n  const getFormErrorMessage = name => {\n    return errors[name] && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: errors[name].message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 32\n    }, this);\n  };\n  const dialogFooter = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      label: \"OK\",\n      className: \"p-button-text\",\n      autoFocus: true,\n      onClick: () => setShowMessage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 71\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 26\n  }, this);\n  const passwordHeader = /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: \"Pick a password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 28\n  }, this);\n  const passwordFooter = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2\",\n      children: \"Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pl-2 ml-2 mt-0\",\n      style: {\n        lineHeight: '1.5'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Minimum 8 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-demo\",\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      visible: showMessage,\n      onHide: () => setShowMessage(false),\n      position: \"top\",\n      footer: dialogFooter,\n      showHeader: false,\n      breakpoints: {\n        '960px': '80vw'\n      },\n      style: {\n        width: '30vw'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-content-center flex-column pt-6 px-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"pi pi-check-circle\",\n          style: {\n            fontSize: '5rem',\n            color: 'var(--green-500)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Registration Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            lineHeight: 1.5,\n            textIndent: '1rem'\n          },\n          children: [\"Your account is registered under name \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: formData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 63\n          }, this), \" ; it'll be valid next 30 days without activation. Please check \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: formData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 149\n          }, this), \" for activation instructions.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-center\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          className: \"p-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                rules: {\n                  required: 'Name is required.'\n                },\n                render: _ref => {\n                  let {\n                    field,\n                    fieldState\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(InputText, {\n                    id: field.name,\n                    ...field,\n                    autoFocus: true,\n                    className: classNames({\n                      'p-invalid': fieldState.invalid\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 37\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: classNames({\n                  'p-error': errors.name\n                }),\n                children: \"Name*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), getFormErrorMessage('name')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label p-input-icon-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"pi pi-envelope\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"email\",\n                control: control,\n                rules: {\n                  required: 'Email is required.',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: 'Invalid email address. E.g. example@email.com'\n                  }\n                },\n                render: _ref2 => {\n                  let {\n                    field,\n                    fieldState\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(InputText, {\n                    id: field.name,\n                    ...field,\n                    className: classNames({\n                      'p-invalid': fieldState.invalid\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: classNames({\n                  'p-error': !!errors.email\n                }),\n                children: \"Email*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), getFormErrorMessage('email')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"password\",\n                control: control,\n                rules: {\n                  required: 'Password is required.'\n                },\n                render: _ref3 => {\n                  let {\n                    field,\n                    fieldState\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(Password, {\n                    id: field.name,\n                    ...field,\n                    toggleMask: true,\n                    className: classNames({\n                      'p-invalid': fieldState.invalid\n                    }),\n                    header: passwordHeader,\n                    footer: passwordFooter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 37\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: classNames({\n                  'p-error': errors.password\n                }),\n                children: \"Password*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), getFormErrorMessage('password')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date\",\n                control: control,\n                render: _ref4 => {\n                  let {\n                    field\n                  } = _ref4;\n                  return /*#__PURE__*/_jsxDEV(Calendar, {\n                    id: field.name,\n                    value: field.value,\n                    onChange: e => field.onChange(e.value),\n                    dateFormat: \"dd/mm/yy\",\n                    mask: \"99/99/9999\",\n                    showIcon: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 37\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"date\",\n                children: \"Birthday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"accept\",\n              control: control,\n              rules: {\n                required: true\n              },\n              render: _ref5 => {\n                let {\n                  field,\n                  fieldState\n                } = _ref5;\n                return /*#__PURE__*/_jsxDEV(Checkbox, {\n                  inputId: field.name,\n                  onChange: e => field.onChange(e.checked),\n                  checked: field.value,\n                  className: classNames({\n                    'p-invalid': fieldState.invalid\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 33\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"accept\",\n              className: classNames({\n                'p-error': errors.accept\n              }),\n              children: \"I agree to the terms and conditions*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            label: \"Submit\",\n            className: \"mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(AddEmp, \"LdHM9We2F+87cKS/ObKu3XkLTHI=\", false, function () {\n  return [useForm];\n});\n_c = AddEmp;\nexport default _c2 = withRouter(AddEmp);\nvar _c, _c2;\n$RefreshReg$(_c, \"AddEmp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useForm","Controller","InputText","Button","Dropdown","Calendar","Password","Checkbox","Dialog","Divider","classNames","axios","withRouter","AddEmp","showMessage","setShowMessage","formData","setFormData","defaultValues","name","email","password","date","country","accept","control","formState","errors","handleSubmit","reset","onSubmit","data","setShowLoading","post","apiUrl","then","result","props","history","push","_id","catch","error","getFormErrorMessage","message","dialogFooter","passwordHeader","passwordFooter","lineHeight","width","fontSize","color","textIndent","required","field","fieldState","invalid","pattern","value","e","onChange","checked"],"sources":["C:/Users/BN GAMING/Desktop/Project/Matrix-MERN-App/frontend/src/container/emp/add_emp.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Password } from 'primereact/password';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Divider } from 'primereact/divider';\r\nimport { classNames } from 'primereact/utils';\r\nimport axios from 'axios';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nexport const AddEmp = () => {\r\n    // const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [formData, setFormData] = useState({});\r\n    // const countryservice = new CountryService();\r\n    const defaultValues = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        date: null,\r\n        country: null,\r\n        accept: false\r\n    }\r\n\r\n    useEffect(() => {\r\n        // countryservice.getCountries().then(data => setCountries(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });\r\n\r\n    const onSubmit = (data) => {\r\n        setFormData(data);\r\n        setShowLoading(true);\r\n       \r\n        axios.post(apiUrl, data)\r\n          .then((result) => {\r\n            setShowLoading(false);\r\n            props.history.push('/show/' + result.data._id)\r\n          }).catch((error) => setShowLoading(false));\r\n        reset();\r\n    };\r\n\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\r\n    };\r\n\r\n    const dialogFooter = <div className=\"flex justify-content-center\"><Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => setShowMessage(false)} /></div>;\r\n    const passwordHeader = <h6>Pick a password</h6>;\r\n    const passwordFooter = (\r\n        <React.Fragment>\r\n            <Divider />\r\n            <p className=\"mt-2\">Suggestions</p>\r\n            <ul className=\"pl-2 ml-2 mt-0\" style={{ lineHeight: '1.5' }}>\r\n                <li>At least one lowercase</li>\r\n                <li>At least one uppercase</li>\r\n                <li>At least one numeric</li>\r\n                <li>Minimum 8 characters</li>\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"flex justify-content-center flex-column pt-6 px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }}></i>\r\n                    <h5>Registration Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n                        Your account is registered under name <b>{formData.name}</b> ; it'll be valid next 30 days without activation. Please check <b>{formData.email}</b> for activation instructions.\r\n                    </p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"flex justify-content-center\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"text-center\">Register</h5>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"p-fluid\">\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"name\" control={control} rules={{ required: 'Name is required.' }} render={({ field, fieldState }) => (\r\n                                    <InputText id={field.name} {...field} autoFocus className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': errors.name })}>Name*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label p-input-icon-right\">\r\n                                <i className=\"pi pi-envelope\" />\r\n                                <Controller name=\"email\" control={control}\r\n                                    rules={{ required: 'Email is required.', pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'Invalid email address. E.g. example@email.com' }}}\r\n                                    render={({ field, fieldState }) => (\r\n                                        <InputText id={field.name} {...field} className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                                )} />\r\n                                <label htmlFor=\"email\" className={classNames({ 'p-error': !!errors.email })}>Email*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('email')}\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"password\" control={control} rules={{ required: 'Password is required.' }} render={({ field, fieldState }) => (\r\n                                    <Password id={field.name} {...field} toggleMask className={classNames({ 'p-invalid': fieldState.invalid })} header={passwordHeader} footer={passwordFooter} />\r\n                                )} />\r\n                                <label htmlFor=\"password\" className={classNames({ 'p-error': errors.password })}>Password*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('password')}\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Controller name=\"date\" control={control} render={({ field }) => (\r\n                                    <Calendar id={field.name} value={field.value} onChange={(e) => field.onChange(e.value)} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                )} />\r\n                                <label htmlFor=\"date\">Birthday</label>\r\n                            </span>\r\n                        </div>\r\n                       \r\n                        <div className=\"field-checkbox\">\r\n                            <Controller name=\"accept\" control={control} rules={{ required: true }} render={({ field, fieldState }) => (\r\n                                <Checkbox inputId={field.name} onChange={(e) => field.onChange(e.checked)} checked={field.value} className={classNames({ 'p-invalid': fieldState.invalid })} />\r\n                            )} />\r\n                            <label htmlFor=\"accept\" className={classNames({ 'p-error': errors.accept })}>I agree to the terms and conditions*</label>\r\n                        </div>\r\n\r\n                        <Button type=\"submit\" label=\"Submit\" className=\"mt-2\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddEmp);            "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}