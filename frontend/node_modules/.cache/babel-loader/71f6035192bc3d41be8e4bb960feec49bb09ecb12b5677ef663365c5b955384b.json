{"ast":null,"code":"'use strict';\n\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['./ResizeSensor.js'], factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = factory(require('./ResizeSensor.js'));\n  } else {\n    root.ElementQueries = factory(root.ResizeSensor);\n    root.ElementQueries.listen();\n  }\n})(typeof window !== 'undefined' ? window : this, function (ResizeSensor) {\n  /**\n   *\n   * @type {Function}\n   * @constructor\n   */\n  var ElementQueries = function () {\n    //<style> element with our dynamically created styles\n    var cssStyleElement;\n\n    //all rules found for element queries\n    var allQueries = {};\n\n    //association map to identify which selector belongs to a element from the animationstart event.\n    var idToSelectorMapping = [];\n\n    /**\n     *\n     * @param element\n     * @returns {Number}\n     */\n    function getEmSize(element) {\n      if (!element) {\n        element = document.documentElement;\n      }\n      var fontSize = window.getComputedStyle(element, null).fontSize;\n      return parseFloat(fontSize) || 16;\n    }\n\n    /**\n     * Get element size\n     * @param {HTMLElement} element\n     * @returns {Object} {width, height}\n     */\n    function getElementSize(element) {\n      if (!element.getBoundingClientRect) {\n        return {\n          width: element.offsetWidth,\n          height: element.offsetHeight\n        };\n      }\n      var rect = element.getBoundingClientRect();\n      return {\n        width: Math.round(rect.width),\n        height: Math.round(rect.height)\n      };\n    }\n\n    /**\n     *\n     * @copyright https://github.com/Mr0grog/element-query/blob/master/LICENSE\n     *\n     * @param {HTMLElement} element\n     * @param {*} value\n     * @returns {*}\n     */\n    function convertToPx(element, value) {\n      var numbers = value.split(/\\d/);\n      var units = numbers[numbers.length - 1];\n      value = parseFloat(value);\n      switch (units) {\n        case \"px\":\n          return value;\n        case \"em\":\n          return value * getEmSize(element);\n        case \"rem\":\n          return value * getEmSize();\n        // Viewport units!\n        // According to http://quirksmode.org/mobile/tableViewport.html\n        // documentElement.clientWidth/Height gets us the most reliable info\n        case \"vw\":\n          return value * document.documentElement.clientWidth / 100;\n        case \"vh\":\n          return value * document.documentElement.clientHeight / 100;\n        case \"vmin\":\n        case \"vmax\":\n          var vw = document.documentElement.clientWidth / 100;\n          var vh = document.documentElement.clientHeight / 100;\n          var chooser = Math[units === \"vmin\" ? \"min\" : \"max\"];\n          return value * chooser(vw, vh);\n        default:\n          return value;\n        // for now, not supporting physical units (since they are just a set number of px)\n        // or ex/ch (getting accurate measurements is hard)\n      }\n    }\n\n    /**\n     *\n     * @param {HTMLElement} element\n     * @param {String} id\n     * @constructor\n     */\n    function SetupInformation(element, id) {\n      this.element = element;\n      var key, option, elementSize, value, actualValue, attrValues, attrValue, attrName;\n      var attributes = ['min-width', 'min-height', 'max-width', 'max-height'];\n\n      /**\n       * Extracts the computed width/height and sets to min/max- attribute.\n       */\n      this.call = function () {\n        // extract current dimensions\n        elementSize = getElementSize(this.element);\n        attrValues = {};\n        for (key in allQueries[id]) {\n          if (!allQueries[id].hasOwnProperty(key)) {\n            continue;\n          }\n          option = allQueries[id][key];\n          value = convertToPx(this.element, option.value);\n          actualValue = option.property === 'width' ? elementSize.width : elementSize.height;\n          attrName = option.mode + '-' + option.property;\n          attrValue = '';\n          if (option.mode === 'min' && actualValue >= value) {\n            attrValue += option.value;\n          }\n          if (option.mode === 'max' && actualValue <= value) {\n            attrValue += option.value;\n          }\n          if (!attrValues[attrName]) attrValues[attrName] = '';\n          if (attrValue && -1 === (' ' + attrValues[attrName] + ' ').indexOf(' ' + attrValue + ' ')) {\n            attrValues[attrName] += ' ' + attrValue;\n          }\n        }\n        for (var k in attributes) {\n          if (!attributes.hasOwnProperty(k)) continue;\n          if (attrValues[attributes[k]]) {\n            this.element.setAttribute(attributes[k], attrValues[attributes[k]].substr(1));\n          } else {\n            this.element.removeAttribute(attributes[k]);\n          }\n        }\n      };\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @param {Object}      id\n     */\n    function setupElement(element, id) {\n      if (!element.elementQueriesSetupInformation) {\n        element.elementQueriesSetupInformation = new SetupInformation(element, id);\n      }\n      if (!element.elementQueriesSensor) {\n        element.elementQueriesSensor = new ResizeSensor(element, function () {\n          element.elementQueriesSetupInformation.call();\n        });\n      }\n    }\n\n    /**\n     * Stores rules to the selector that should be applied once resized.\n     *\n     * @param {String} selector\n     * @param {String} mode min|max\n     * @param {String} property width|height\n     * @param {String} value\n     */\n    function queueQuery(selector, mode, property, value) {\n      if (typeof allQueries[selector] === 'undefined') {\n        allQueries[selector] = [];\n        // add animation to trigger animationstart event, so we know exactly when a element appears in the DOM\n\n        var id = idToSelectorMapping.length;\n        cssStyleElement.innerHTML += '\\n' + selector + ' {animation: 0.1s element-queries;}';\n        cssStyleElement.innerHTML += '\\n' + selector + ' > .resize-sensor {min-width: ' + id + 'px;}';\n        idToSelectorMapping.push(selector);\n      }\n      allQueries[selector].push({\n        mode: mode,\n        property: property,\n        value: value\n      });\n    }\n    function getQuery(container) {\n      var query;\n      if (document.querySelectorAll) query = container ? container.querySelectorAll.bind(container) : document.querySelectorAll.bind(document);\n      if (!query && 'undefined' !== typeof $$) query = $$;\n      if (!query && 'undefined' !== typeof jQuery) query = jQuery;\n      if (!query) {\n        throw 'No document.querySelectorAll, jQuery or Mootools\\'s $$ found.';\n      }\n      return query;\n    }\n\n    /**\n     * If animationStart didn't catch a new element in the DOM, we can manually search for it\n     */\n    function findElementQueriesElements(container) {\n      var query = getQuery(container);\n      for (var selector in allQueries) if (allQueries.hasOwnProperty(selector)) {\n        // find all elements based on the extract query selector from the element query rule\n        var elements = query(selector, container);\n        for (var i = 0, j = elements.length; i < j; i++) {\n          setupElement(elements[i], selector);\n        }\n      }\n    }\n\n    /**\n     *\n     * @param {HTMLElement} element\n     */\n    function attachResponsiveImage(element) {\n      var children = [];\n      var rules = [];\n      var sources = [];\n      var defaultImageId = 0;\n      var lastActiveImage = -1;\n      var loadedImages = [];\n      for (var i in element.children) {\n        if (!element.children.hasOwnProperty(i)) continue;\n        if (element.children[i].tagName && element.children[i].tagName.toLowerCase() === 'img') {\n          children.push(element.children[i]);\n          var minWidth = element.children[i].getAttribute('min-width') || element.children[i].getAttribute('data-min-width');\n          //var minHeight = element.children[i].getAttribute('min-height') || element.children[i].getAttribute('data-min-height');\n          var src = element.children[i].getAttribute('data-src') || element.children[i].getAttribute('url');\n          sources.push(src);\n          var rule = {\n            minWidth: minWidth\n          };\n          rules.push(rule);\n          if (!minWidth) {\n            defaultImageId = children.length - 1;\n            element.children[i].style.display = 'block';\n          } else {\n            element.children[i].style.display = 'none';\n          }\n        }\n      }\n      lastActiveImage = defaultImageId;\n      function check() {\n        var imageToDisplay = false,\n          i;\n        for (i in children) {\n          if (!children.hasOwnProperty(i)) continue;\n          if (rules[i].minWidth) {\n            if (element.offsetWidth > rules[i].minWidth) {\n              imageToDisplay = i;\n            }\n          }\n        }\n        if (!imageToDisplay) {\n          //no rule matched, show default\n          imageToDisplay = defaultImageId;\n        }\n        if (lastActiveImage !== imageToDisplay) {\n          //image change\n\n          if (!loadedImages[imageToDisplay]) {\n            //image has not been loaded yet, we need to load the image first in memory to prevent flash of\n            //no content\n\n            var image = new Image();\n            image.onload = function () {\n              children[imageToDisplay].src = sources[imageToDisplay];\n              children[lastActiveImage].style.display = 'none';\n              children[imageToDisplay].style.display = 'block';\n              loadedImages[imageToDisplay] = true;\n              lastActiveImage = imageToDisplay;\n            };\n            image.src = sources[imageToDisplay];\n          } else {\n            children[lastActiveImage].style.display = 'none';\n            children[imageToDisplay].style.display = 'block';\n            lastActiveImage = imageToDisplay;\n          }\n        } else {\n          //make sure for initial check call the .src is set correctly\n          children[imageToDisplay].src = sources[imageToDisplay];\n        }\n      }\n      element.resizeSensorInstance = new ResizeSensor(element, check);\n      check();\n    }\n    function findResponsiveImages() {\n      var query = getQuery();\n      var elements = query('[data-responsive-image],[responsive-image]');\n      for (var i = 0, j = elements.length; i < j; i++) {\n        attachResponsiveImage(elements[i]);\n      }\n    }\n    var regex = /,?[\\s\\t]*([^,\\n]*?)((?:\\[[\\s\\t]*?(?:min|max)-(?:width|height)[\\s\\t]*?[~$\\^]?=[\\s\\t]*?\"[^\"]*?\"[\\s\\t]*?])+)([^,\\n\\s\\{]*)/mgi;\n    var attrRegex = /\\[[\\s\\t]*?(min|max)-(width|height)[\\s\\t]*?[~$\\^]?=[\\s\\t]*?\"([^\"]*?)\"[\\s\\t]*?]/mgi;\n\n    /**\n     * @param {String} css\n     */\n    function extractQuery(css) {\n      var match, smatch, attrs, attrMatch;\n      css = css.replace(/'/g, '\"');\n      while (null !== (match = regex.exec(css))) {\n        smatch = match[1] + match[3];\n        attrs = match[2];\n        while (null !== (attrMatch = attrRegex.exec(attrs))) {\n          queueQuery(smatch, attrMatch[1], attrMatch[2], attrMatch[3]);\n        }\n      }\n    }\n\n    /**\n     * @param {CssRule[]|String} rules\n     */\n    function readRules(rules) {\n      var selector = '';\n      if (!rules) {\n        return;\n      }\n      if ('string' === typeof rules) {\n        rules = rules.toLowerCase();\n        if (-1 !== rules.indexOf('min-width') || -1 !== rules.indexOf('max-width')) {\n          extractQuery(rules);\n        }\n      } else {\n        for (var i = 0, j = rules.length; i < j; i++) {\n          if (1 === rules[i].type) {\n            selector = rules[i].selectorText || rules[i].cssText;\n            if (-1 !== selector.indexOf('min-height') || -1 !== selector.indexOf('max-height')) {\n              extractQuery(selector);\n            } else if (-1 !== selector.indexOf('min-width') || -1 !== selector.indexOf('max-width')) {\n              extractQuery(selector);\n            }\n          } else if (4 === rules[i].type) {\n            readRules(rules[i].cssRules || rules[i].rules);\n          } else if (3 === rules[i].type) {\n            if (rules[i].styleSheet.hasOwnProperty(\"cssRules\")) {\n              readRules(rules[i].styleSheet.cssRules);\n            }\n          }\n        }\n      }\n    }\n    var defaultCssInjected = false;\n\n    /**\n     * Searches all css rules and setups the event listener to all elements with element query rules..\n     */\n    this.init = function () {\n      var animationStart = 'animationstart';\n      if (typeof document.documentElement.style['webkitAnimationName'] !== 'undefined') {\n        animationStart = 'webkitAnimationStart';\n      } else if (typeof document.documentElement.style['MozAnimationName'] !== 'undefined') {\n        animationStart = 'mozanimationstart';\n      } else if (typeof document.documentElement.style['OAnimationName'] !== 'undefined') {\n        animationStart = 'oanimationstart';\n      }\n      document.body.addEventListener(animationStart, function (e) {\n        var element = e.target;\n        var styles = element && window.getComputedStyle(element, null);\n        var animationName = styles && styles.getPropertyValue('animation-name');\n        var requiresSetup = animationName && -1 !== animationName.indexOf('element-queries');\n        if (requiresSetup) {\n          element.elementQueriesSensor = new ResizeSensor(element, function () {\n            if (element.elementQueriesSetupInformation) {\n              element.elementQueriesSetupInformation.call();\n            }\n          });\n          var sensorStyles = window.getComputedStyle(element.resizeSensor, null);\n          var id = sensorStyles.getPropertyValue('min-width');\n          id = parseInt(id.replace('px', ''));\n          setupElement(e.target, idToSelectorMapping[id]);\n        }\n      });\n      if (!defaultCssInjected) {\n        cssStyleElement = document.createElement('style');\n        cssStyleElement.type = 'text/css';\n        cssStyleElement.innerHTML = '[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}';\n\n        //safari wants at least one rule in keyframes to start working\n        cssStyleElement.innerHTML += '\\n@keyframes element-queries { 0% { visibility: inherit; } }';\n        document.getElementsByTagName('head')[0].appendChild(cssStyleElement);\n        defaultCssInjected = true;\n      }\n      for (var i = 0, j = document.styleSheets.length; i < j; i++) {\n        try {\n          if (document.styleSheets[i].href && 0 === document.styleSheets[i].href.indexOf('file://')) {\n            console.warn(\"CssElementQueries: unable to parse local css files, \" + document.styleSheets[i].href);\n          }\n          readRules(document.styleSheets[i].cssRules || document.styleSheets[i].rules || document.styleSheets[i].cssText);\n        } catch (e) {}\n      }\n      findResponsiveImages();\n    };\n\n    /**\n     * Go through all collected rules (readRules()) and attach the resize-listener.\n     * Not necessary to call it manually, since we detect automatically when new elements\n     * are available in the DOM. However, sometimes handy for dirty DOM modifications.\n     *\n     * @param {HTMLElement} container only elements of the container are considered (document.body if not set)\n     */\n    this.findElementQueriesElements = function (container) {\n      findElementQueriesElements(container);\n    };\n    this.update = function () {\n      this.init();\n    };\n  };\n  ElementQueries.update = function () {\n    ElementQueries.instance.update();\n  };\n\n  /**\n   * Removes all sensor and elementquery information from the element.\n   *\n   * @param {HTMLElement} element\n   */\n  ElementQueries.detach = function (element) {\n    if (element.elementQueriesSetupInformation) {\n      //element queries\n      element.elementQueriesSensor.detach();\n      delete element.elementQueriesSetupInformation;\n      delete element.elementQueriesSensor;\n    } else if (element.resizeSensorInstance) {\n      //responsive image\n\n      element.resizeSensorInstance.detach();\n      delete element.resizeSensorInstance;\n    }\n  };\n  ElementQueries.init = function () {\n    if (!ElementQueries.instance) {\n      ElementQueries.instance = new ElementQueries();\n    }\n    ElementQueries.instance.init();\n  };\n  var domLoaded = function (callback) {\n    /* Mozilla, Chrome, Opera */\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', callback, false);\n    }\n    /* Safari, iCab, Konqueror */else if (/KHTML|WebKit|iCab/i.test(navigator.userAgent)) {\n      var DOMLoadTimer = setInterval(function () {\n        if (/loaded|complete/i.test(document.readyState)) {\n          callback();\n          clearInterval(DOMLoadTimer);\n        }\n      }, 10);\n    }\n    /* Other web browsers */else window.onload = callback;\n  };\n  ElementQueries.findElementQueriesElements = function (container) {\n    ElementQueries.instance.findElementQueriesElements(container);\n  };\n  ElementQueries.listen = function () {\n    domLoaded(ElementQueries.init);\n  };\n  return ElementQueries;\n});","map":{"version":3,"names":["root","factory","define","amd","exports","module","require","ElementQueries","ResizeSensor","listen","window","cssStyleElement","allQueries","idToSelectorMapping","getEmSize","element","document","documentElement","fontSize","getComputedStyle","parseFloat","getElementSize","getBoundingClientRect","width","offsetWidth","height","offsetHeight","rect","Math","round","convertToPx","value","numbers","split","units","length","clientWidth","clientHeight","vw","vh","chooser","SetupInformation","id","key","option","elementSize","actualValue","attrValues","attrValue","attrName","attributes","call","hasOwnProperty","property","mode","indexOf","k","setAttribute","substr","removeAttribute","setupElement","elementQueriesSetupInformation","elementQueriesSensor","queueQuery","selector","innerHTML","push","getQuery","container","query","querySelectorAll","bind","$$","jQuery","findElementQueriesElements","elements","i","j","attachResponsiveImage","children","rules","sources","defaultImageId","lastActiveImage","loadedImages","tagName","toLowerCase","minWidth","getAttribute","src","rule","style","display","check","imageToDisplay","image","Image","onload","resizeSensorInstance","findResponsiveImages","regex","attrRegex","extractQuery","css","match","smatch","attrs","attrMatch","replace","exec","readRules","type","selectorText","cssText","cssRules","styleSheet","defaultCssInjected","init","animationStart","body","addEventListener","e","target","styles","animationName","getPropertyValue","requiresSetup","sensorStyles","resizeSensor","parseInt","createElement","getElementsByTagName","appendChild","styleSheets","href","console","warn","update","instance","detach","domLoaded","callback","test","navigator","userAgent","DOMLoadTimer","setInterval","readyState","clearInterval"],"sources":["C:/Users/BN GAMING/Desktop/Project/Matrix-MERN-App/frontend/node_modules/css-element-queries/src/ElementQueries.js"],"sourcesContent":["'use strict';\n\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['./ResizeSensor.js'], factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory(require('./ResizeSensor.js'));\n    } else {\n        root.ElementQueries = factory(root.ResizeSensor);\n        root.ElementQueries.listen();\n    }\n}(typeof window !== 'undefined' ? window : this, function (ResizeSensor) {\n\n    /**\n     *\n     * @type {Function}\n     * @constructor\n     */\n    var ElementQueries = function () {\n        //<style> element with our dynamically created styles\n        var cssStyleElement;\n\n        //all rules found for element queries\n        var allQueries = {};\n\n        //association map to identify which selector belongs to a element from the animationstart event.\n        var idToSelectorMapping = [];\n\n        /**\n         *\n         * @param element\n         * @returns {Number}\n         */\n        function getEmSize(element) {\n            if (!element) {\n                element = document.documentElement;\n            }\n            var fontSize = window.getComputedStyle(element, null).fontSize;\n            return parseFloat(fontSize) || 16;\n        }\n\n        /**\n         * Get element size\n         * @param {HTMLElement} element\n         * @returns {Object} {width, height}\n         */\n        function getElementSize(element) {\n            if (!element.getBoundingClientRect) {\n                return {\n                    width: element.offsetWidth,\n                    height: element.offsetHeight\n                }\n            }\n\n            var rect = element.getBoundingClientRect();\n            return {\n                width: Math.round(rect.width),\n                height: Math.round(rect.height)\n            }\n        }\n\n        /**\n         *\n         * @copyright https://github.com/Mr0grog/element-query/blob/master/LICENSE\n         *\n         * @param {HTMLElement} element\n         * @param {*} value\n         * @returns {*}\n         */\n        function convertToPx(element, value) {\n            var numbers = value.split(/\\d/);\n            var units = numbers[numbers.length - 1];\n            value = parseFloat(value);\n            switch (units) {\n                case \"px\":\n                    return value;\n                case \"em\":\n                    return value * getEmSize(element);\n                case \"rem\":\n                    return value * getEmSize();\n                // Viewport units!\n                // According to http://quirksmode.org/mobile/tableViewport.html\n                // documentElement.clientWidth/Height gets us the most reliable info\n                case \"vw\":\n                    return value * document.documentElement.clientWidth / 100;\n                case \"vh\":\n                    return value * document.documentElement.clientHeight / 100;\n                case \"vmin\":\n                case \"vmax\":\n                    var vw = document.documentElement.clientWidth / 100;\n                    var vh = document.documentElement.clientHeight / 100;\n                    var chooser = Math[units === \"vmin\" ? \"min\" : \"max\"];\n                    return value * chooser(vw, vh);\n                default:\n                    return value;\n                // for now, not supporting physical units (since they are just a set number of px)\n                // or ex/ch (getting accurate measurements is hard)\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {String} id\n         * @constructor\n         */\n        function SetupInformation(element, id) {\n            this.element = element;\n            var key, option, elementSize, value, actualValue, attrValues, attrValue, attrName;\n\n            var attributes = ['min-width', 'min-height', 'max-width', 'max-height'];\n\n            /**\n             * Extracts the computed width/height and sets to min/max- attribute.\n             */\n            this.call = function () {\n                // extract current dimensions\n                elementSize = getElementSize(this.element);\n\n                attrValues = {};\n\n                for (key in allQueries[id]) {\n                    if (!allQueries[id].hasOwnProperty(key)) {\n                        continue;\n                    }\n                    option = allQueries[id][key];\n\n                    value = convertToPx(this.element, option.value);\n\n                    actualValue = option.property === 'width' ? elementSize.width : elementSize.height;\n                    attrName = option.mode + '-' + option.property;\n                    attrValue = '';\n\n                    if (option.mode === 'min' && actualValue >= value) {\n                        attrValue += option.value;\n                    }\n\n                    if (option.mode === 'max' && actualValue <= value) {\n                        attrValue += option.value;\n                    }\n\n                    if (!attrValues[attrName]) attrValues[attrName] = '';\n                    if (attrValue && -1 === (' ' + attrValues[attrName] + ' ').indexOf(' ' + attrValue + ' ')) {\n                        attrValues[attrName] += ' ' + attrValue;\n                    }\n                }\n\n                for (var k in attributes) {\n                    if (!attributes.hasOwnProperty(k)) continue;\n\n                    if (attrValues[attributes[k]]) {\n                        this.element.setAttribute(attributes[k], attrValues[attributes[k]].substr(1));\n                    } else {\n                        this.element.removeAttribute(attributes[k]);\n                    }\n                }\n            };\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {Object}      id\n         */\n        function setupElement(element, id) {\n            if (!element.elementQueriesSetupInformation) {\n                element.elementQueriesSetupInformation = new SetupInformation(element, id);\n            }\n\n            if (!element.elementQueriesSensor) {\n                element.elementQueriesSensor = new ResizeSensor(element, function () {\n                    element.elementQueriesSetupInformation.call();\n                });\n            }\n        }\n\n        /**\n         * Stores rules to the selector that should be applied once resized.\n         *\n         * @param {String} selector\n         * @param {String} mode min|max\n         * @param {String} property width|height\n         * @param {String} value\n         */\n        function queueQuery(selector, mode, property, value) {\n            if (typeof(allQueries[selector]) === 'undefined') {\n                allQueries[selector] = [];\n                // add animation to trigger animationstart event, so we know exactly when a element appears in the DOM\n\n                var id = idToSelectorMapping.length;\n                cssStyleElement.innerHTML += '\\n' + selector + ' {animation: 0.1s element-queries;}';\n                cssStyleElement.innerHTML += '\\n' + selector + ' > .resize-sensor {min-width: '+id+'px;}';\n                idToSelectorMapping.push(selector);\n            }\n\n            allQueries[selector].push({\n                mode: mode,\n                property: property,\n                value: value\n            });\n        }\n\n        function getQuery(container) {\n            var query;\n            if (document.querySelectorAll) query = (container) ? container.querySelectorAll.bind(container) : document.querySelectorAll.bind(document);\n            if (!query && 'undefined' !== typeof $$) query = $$;\n            if (!query && 'undefined' !== typeof jQuery) query = jQuery;\n\n            if (!query) {\n                throw 'No document.querySelectorAll, jQuery or Mootools\\'s $$ found.';\n            }\n\n            return query;\n        }\n\n        /**\n         * If animationStart didn't catch a new element in the DOM, we can manually search for it\n         */\n        function findElementQueriesElements(container) {\n            var query = getQuery(container);\n\n            for (var selector in allQueries) if (allQueries.hasOwnProperty(selector)) {\n                // find all elements based on the extract query selector from the element query rule\n                var elements = query(selector, container);\n\n                for (var i = 0, j = elements.length; i < j; i++) {\n                    setupElement(elements[i], selector);\n                }\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         */\n        function attachResponsiveImage(element) {\n            var children = [];\n            var rules = [];\n            var sources = [];\n            var defaultImageId = 0;\n            var lastActiveImage = -1;\n            var loadedImages = [];\n\n            for (var i in element.children) {\n                if (!element.children.hasOwnProperty(i)) continue;\n\n                if (element.children[i].tagName && element.children[i].tagName.toLowerCase() === 'img') {\n                    children.push(element.children[i]);\n\n                    var minWidth = element.children[i].getAttribute('min-width') || element.children[i].getAttribute('data-min-width');\n                    //var minHeight = element.children[i].getAttribute('min-height') || element.children[i].getAttribute('data-min-height');\n                    var src = element.children[i].getAttribute('data-src') || element.children[i].getAttribute('url');\n\n                    sources.push(src);\n\n                    var rule = {\n                        minWidth: minWidth\n                    };\n\n                    rules.push(rule);\n\n                    if (!minWidth) {\n                        defaultImageId = children.length - 1;\n                        element.children[i].style.display = 'block';\n                    } else {\n                        element.children[i].style.display = 'none';\n                    }\n                }\n            }\n\n            lastActiveImage = defaultImageId;\n\n            function check() {\n                var imageToDisplay = false, i;\n\n                for (i in children) {\n                    if (!children.hasOwnProperty(i)) continue;\n\n                    if (rules[i].minWidth) {\n                        if (element.offsetWidth > rules[i].minWidth) {\n                            imageToDisplay = i;\n                        }\n                    }\n                }\n\n                if (!imageToDisplay) {\n                    //no rule matched, show default\n                    imageToDisplay = defaultImageId;\n                }\n\n                if (lastActiveImage !== imageToDisplay) {\n                    //image change\n\n                    if (!loadedImages[imageToDisplay]) {\n                        //image has not been loaded yet, we need to load the image first in memory to prevent flash of\n                        //no content\n\n                        var image = new Image();\n                        image.onload = function () {\n                            children[imageToDisplay].src = sources[imageToDisplay];\n\n                            children[lastActiveImage].style.display = 'none';\n                            children[imageToDisplay].style.display = 'block';\n\n                            loadedImages[imageToDisplay] = true;\n\n                            lastActiveImage = imageToDisplay;\n                        };\n\n                        image.src = sources[imageToDisplay];\n                    } else {\n                        children[lastActiveImage].style.display = 'none';\n                        children[imageToDisplay].style.display = 'block';\n                        lastActiveImage = imageToDisplay;\n                    }\n                } else {\n                    //make sure for initial check call the .src is set correctly\n                    children[imageToDisplay].src = sources[imageToDisplay];\n                }\n            }\n\n            element.resizeSensorInstance = new ResizeSensor(element, check);\n            check();\n        }\n\n        function findResponsiveImages() {\n            var query = getQuery();\n\n            var elements = query('[data-responsive-image],[responsive-image]');\n            for (var i = 0, j = elements.length; i < j; i++) {\n                attachResponsiveImage(elements[i]);\n            }\n        }\n\n        var regex = /,?[\\s\\t]*([^,\\n]*?)((?:\\[[\\s\\t]*?(?:min|max)-(?:width|height)[\\s\\t]*?[~$\\^]?=[\\s\\t]*?\"[^\"]*?\"[\\s\\t]*?])+)([^,\\n\\s\\{]*)/mgi;\n        var attrRegex = /\\[[\\s\\t]*?(min|max)-(width|height)[\\s\\t]*?[~$\\^]?=[\\s\\t]*?\"([^\"]*?)\"[\\s\\t]*?]/mgi;\n\n        /**\n         * @param {String} css\n         */\n        function extractQuery(css) {\n            var match, smatch, attrs, attrMatch;\n\n            css = css.replace(/'/g, '\"');\n            while (null !== (match = regex.exec(css))) {\n                smatch = match[1] + match[3];\n                attrs = match[2];\n\n                while (null !== (attrMatch = attrRegex.exec(attrs))) {\n                    queueQuery(smatch, attrMatch[1], attrMatch[2], attrMatch[3]);\n                }\n            }\n        }\n\n        /**\n         * @param {CssRule[]|String} rules\n         */\n        function readRules(rules) {\n            var selector = '';\n\n            if (!rules) {\n                return;\n            }\n\n            if ('string' === typeof rules) {\n                rules = rules.toLowerCase();\n                if (-1 !== rules.indexOf('min-width') || -1 !== rules.indexOf('max-width')) {\n                    extractQuery(rules);\n                }\n            } else {\n                for (var i = 0, j = rules.length; i < j; i++) {\n                    if (1 === rules[i].type) {\n                        selector = rules[i].selectorText || rules[i].cssText;\n                        if (-1 !== selector.indexOf('min-height') || -1 !== selector.indexOf('max-height')) {\n                            extractQuery(selector);\n                        } else if (-1 !== selector.indexOf('min-width') || -1 !== selector.indexOf('max-width')) {\n                            extractQuery(selector);\n                        }\n                    } else if (4 === rules[i].type) {\n                        readRules(rules[i].cssRules || rules[i].rules);\n                    } else if (3 === rules[i].type) {\n                        if(rules[i].styleSheet.hasOwnProperty(\"cssRules\")) {\n                            readRules(rules[i].styleSheet.cssRules);\n                        }\n                    }\n                }\n            }\n        }\n\n        var defaultCssInjected = false;\n\n        /**\n         * Searches all css rules and setups the event listener to all elements with element query rules..\n         */\n        this.init = function () {\n            var animationStart = 'animationstart';\n            if (typeof document.documentElement.style['webkitAnimationName'] !== 'undefined') {\n                animationStart = 'webkitAnimationStart';\n            } else if (typeof document.documentElement.style['MozAnimationName'] !== 'undefined') {\n                animationStart = 'mozanimationstart';\n            } else if (typeof document.documentElement.style['OAnimationName'] !== 'undefined') {\n                animationStart = 'oanimationstart';\n            }\n\n            document.body.addEventListener(animationStart, function (e) {\n                var element = e.target;\n                var styles = element && window.getComputedStyle(element, null);\n                var animationName = styles && styles.getPropertyValue('animation-name');\n                var requiresSetup = animationName && (-1 !== animationName.indexOf('element-queries'));\n\n                if (requiresSetup) {\n                    element.elementQueriesSensor = new ResizeSensor(element, function () {\n                        if (element.elementQueriesSetupInformation) {\n                            element.elementQueriesSetupInformation.call();\n                        }\n                    });\n\n                    var sensorStyles = window.getComputedStyle(element.resizeSensor, null);\n                    var id = sensorStyles.getPropertyValue('min-width');\n                    id = parseInt(id.replace('px', ''));\n                    setupElement(e.target, idToSelectorMapping[id]);\n                }\n            });\n\n            if (!defaultCssInjected) {\n                cssStyleElement = document.createElement('style');\n                cssStyleElement.type = 'text/css';\n                cssStyleElement.innerHTML = '[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}';\n\n                //safari wants at least one rule in keyframes to start working\n                cssStyleElement.innerHTML += '\\n@keyframes element-queries { 0% { visibility: inherit; } }';\n                document.getElementsByTagName('head')[0].appendChild(cssStyleElement);\n                defaultCssInjected = true;\n            }\n\n            for (var i = 0, j = document.styleSheets.length; i < j; i++) {\n                try {\n                    if (document.styleSheets[i].href && 0 === document.styleSheets[i].href.indexOf('file://')) {\n                        console.warn(\"CssElementQueries: unable to parse local css files, \" + document.styleSheets[i].href);\n                    }\n\n                    readRules(document.styleSheets[i].cssRules || document.styleSheets[i].rules || document.styleSheets[i].cssText);\n                } catch (e) {\n                }\n            }\n\n            findResponsiveImages();\n        };\n\n        /**\n         * Go through all collected rules (readRules()) and attach the resize-listener.\n         * Not necessary to call it manually, since we detect automatically when new elements\n         * are available in the DOM. However, sometimes handy for dirty DOM modifications.\n         *\n         * @param {HTMLElement} container only elements of the container are considered (document.body if not set)\n         */\n        this.findElementQueriesElements = function (container) {\n            findElementQueriesElements(container);\n        };\n\n        this.update = function () {\n            this.init();\n        };\n    };\n\n    ElementQueries.update = function () {\n        ElementQueries.instance.update();\n    };\n\n    /**\n     * Removes all sensor and elementquery information from the element.\n     *\n     * @param {HTMLElement} element\n     */\n    ElementQueries.detach = function (element) {\n        if (element.elementQueriesSetupInformation) {\n            //element queries\n            element.elementQueriesSensor.detach();\n            delete element.elementQueriesSetupInformation;\n            delete element.elementQueriesSensor;\n\n        } else if (element.resizeSensorInstance) {\n            //responsive image\n\n            element.resizeSensorInstance.detach();\n            delete element.resizeSensorInstance;\n        }\n    };\n\n    ElementQueries.init = function () {\n        if (!ElementQueries.instance) {\n            ElementQueries.instance = new ElementQueries();\n        }\n\n        ElementQueries.instance.init();\n    };\n\n    var domLoaded = function (callback) {\n        /* Mozilla, Chrome, Opera */\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', callback, false);\n        }\n        /* Safari, iCab, Konqueror */\n        else if (/KHTML|WebKit|iCab/i.test(navigator.userAgent)) {\n            var DOMLoadTimer = setInterval(function () {\n                if (/loaded|complete/i.test(document.readyState)) {\n                    callback();\n                    clearInterval(DOMLoadTimer);\n                }\n            }, 10);\n        }\n        /* Other web browsers */\n        else window.onload = callback;\n    };\n\n    ElementQueries.findElementQueriesElements = function (container) {\n        ElementQueries.instance.findElementQueriesElements(container);\n    };\n\n    ElementQueries.listen = function () {\n        domLoaded(ElementQueries.init);\n    };\n\n    return ElementQueries;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}