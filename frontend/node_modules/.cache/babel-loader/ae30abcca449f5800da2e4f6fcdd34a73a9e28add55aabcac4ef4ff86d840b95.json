{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\5th Semester\\\\Software Construction Lab\\\\project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\graphs\\\\graphMain.js\",\n  _s = $RefreshSig$();\nimport \"./../../css/style.css\";\nimport \"./../../css/bootstrap.min.css\";\nimport { Button } from \"primereact/button\";\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\nimport { Chart } from \"primereact/chart\";\nimport axios from \"axios\";\nimport constants from \"../../utilities/constants\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constant = constants.getConstant();\nlet forName;\nlet forAmount;\nfunction Graph() {\n  _s();\n  const [data, setData] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(constant.logList);\n      setData(result.data.logistics);\n      setShowLoading(false);\n    };\n    fetchData();\n    charData();\n  }, []);\n  const charData = () => {\n    data.map(item => (forName = item.name, forAmount = item.amount));\n    console.log(forName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Logistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Seed Batch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Purity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [data.map(item => (forName = item.name, forAmount = item.amount)), /*#__PURE__*/_jsxDEV(Chart, {\n          type: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Bar Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"PolarArea Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"fTTzLClcgLQ6tMJxIqZrUdMXG/w=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Button","Jumbotron","Chart","axios","constants","useEffect","useState","constant","getConstant","forName","forAmount","Graph","data","setData","showLoading","setShowLoading","fetchData","result","logList","logistics","charData","map","item","name","amount","console","log","marginLeft"],"sources":["D:/University/5th Semester/Software Construction Lab/project/Matrix-MERN-App/frontend/src/container/graphs/graphMain.js"],"sourcesContent":["import \"./../../css/style.css\";\r\nimport \"./../../css/bootstrap.min.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\r\nimport { Chart } from \"primereact/chart\";\r\nimport axios from \"axios\";\r\nimport constants from \"../../utilities/constants\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst constant = constants.getConstant();\r\nlet forName;\r\nlet forAmount;\r\n\r\nfunction Graph() {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.logList);\r\n      setData(result.data.logistics);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    charData();\r\n  }, []);\r\n\r\n  const charData = () => {\r\n    data.map((item) => ((forName = item.name), (forAmount = item.amount)));\r\n    console.log(forName)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-4\">\r\n        <b>Reports</b>\r\n      </h2>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Logistics</Button>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Seed Batch</Button>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Purity</Button>\r\n      <br></br>\r\n      <br></br>\r\n      <Jumbotron>\r\n        <div className=\"card\">\r\n            {\r\n               data.map((item) => ((forName = item.name), (forAmount = item.amount)))\r\n            }\r\n          <Chart type=\"bar\" />\r\n        </div>\r\n      </Jumbotron>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Bar Graph</Button>\r\n      <Button style={{ marginLeft: \"2rem\" }}>PolarArea Graph</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAO,uBAAuB;AAC9B,OAAO,+BAA+B;AACtC,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,SAAS,MAAM,+BAA+B;AACrD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,QAAQ,GAAGH,SAAS,CAACI,WAAW,EAAE;AACxC,IAAIC,OAAO;AACX,IAAIC,SAAS;AAEb,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,YAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMd,KAAK,CAACI,QAAQ,CAACW,OAAO,CAAC;MAC5CL,OAAO,CAACI,MAAM,CAACL,IAAI,CAACO,SAAS,CAAC;MAC9BJ,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDC,SAAS,EAAE;IACXI,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAG,MAAM;IACrBR,IAAI,CAACS,GAAG,CAAEC,IAAI,KAAOb,OAAO,GAAGa,IAAI,CAACC,IAAI,EAAIb,SAAS,GAAGY,IAAI,CAACE,MAAO,CAAC,CAAC;IACtEC,OAAO,CAACC,GAAG,CAACjB,OAAO,CAAC;EACtB,CAAC;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,MAAM;MAAA,uBAClB;QAAA,UAAG;MAAO;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACX,eACL,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEkB,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACzD,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEA,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEA,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eACtD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,SAAS;MAAA,uBACR;QAAK,SAAS,EAAC,MAAM;QAAA,WAEdf,IAAI,CAACS,GAAG,CAAEC,IAAI,KAAOb,OAAO,GAAGa,IAAI,CAACC,IAAI,EAAIb,SAAS,GAAGY,IAAI,CAACE,MAAO,CAAC,CAAC,eAE3E,QAAC,KAAK;UAAC,IAAI,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAChB;MAAA;MAAA;MAAA;IAAA,QACI,eACZ,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEG,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACzD,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEA,UAAU,EAAE;MAAO,CAAE;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAEV;AAAC,GA1CQhB,KAAK;AAAA,KAALA,KAAK;AA4Cd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}