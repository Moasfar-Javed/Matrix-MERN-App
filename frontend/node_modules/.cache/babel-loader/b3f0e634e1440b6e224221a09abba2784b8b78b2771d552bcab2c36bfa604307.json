{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\5th Semester\\\\Software Construction Lab\\\\project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\graphs\\\\graphMain.js\",\n  _s = $RefreshSig$();\nimport \"./../../css/style.css\";\nimport \"./../../css/bootstrap.min.css\";\nimport { Button } from \"primereact/button\";\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\nimport { Chart } from \"primereact/chart\";\nimport axios from \"axios\";\nimport constants from \"../../utilities/constants\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constant = constants.getConstant();\nvar forName = [];\nvar forAmount = [];\nfunction Graph() {\n  _s();\n  const [data, setData] = useState([]);\n  const [chart, setchart] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  let charname = \"logistics\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(constant.logList);\n      setData(result.data.logistics);\n      setShowLoading(false);\n    };\n    fetchData();\n  }, []);\n  const onLogs = () => {\n    charname = \"logistics\";\n    setchart(charname);\n  };\n  const onSeedBatch = () => {\n    charname = \"seedbatch\";\n    setchart(charname);\n  };\n  const onPurity = () => {\n    charname = \"purity\";\n    setchart(charname);\n  };\n  const [basicData] = useState({\n    labels: forName,\n    datasets: [{\n      label: \"Vendor Name x Amount\",\n      backgroundColor: \"#42A5F5\",\n      data: forAmount\n    }]\n  });\n  const getLightTheme = () => {\n    let basicOptions = {\n      maintainAspectRatio: false,\n      aspectRatio: 0.8,\n      plugins: {\n        legend: {\n          labels: {\n            color: \"#495057\"\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        },\n        y: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        }\n      }\n    };\n    return {\n      basicOptions\n    };\n  };\n  const {\n    basicOptions\n  } = getLightTheme();\n  return console.log(charname), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((item, i) => (forName[i] = item.name, forAmount[i] = item.amount, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 14\n    }, this))), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      onClick: () => {\n        onLogs();\n      },\n      children: \"Logistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      onClick: () => {\n        onSeedBatch();\n      },\n      children: \"Seed Batch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      onClick: () => {\n        onPurity();\n      },\n      children: \"Purity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [chart.map(item => charname = item), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: charname == \"logistics\" ? /*#__PURE__*/_jsxDEV(Chart, {\n          type: \"bar\",\n          data: basicData,\n          options: basicOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Bar Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"PolarArea Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n}\n_s(Graph, \"AC3bA+U2hVpROIHAZmwrmGiQC24=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Button","Jumbotron","Chart","axios","constants","useEffect","useState","constant","getConstant","forName","forAmount","Graph","data","setData","chart","setchart","showLoading","setShowLoading","charname","fetchData","result","logList","logistics","onLogs","onSeedBatch","onPurity","basicData","labels","datasets","label","backgroundColor","getLightTheme","basicOptions","maintainAspectRatio","aspectRatio","plugins","legend","color","scales","x","ticks","grid","y","console","log","map","item","i","name","amount","marginLeft"],"sources":["D:/University/5th Semester/Software Construction Lab/project/Matrix-MERN-App/frontend/src/container/graphs/graphMain.js"],"sourcesContent":["import \"./../../css/style.css\";\r\nimport \"./../../css/bootstrap.min.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\r\nimport { Chart } from \"primereact/chart\";\r\nimport axios from \"axios\";\r\nimport constants from \"../../utilities/constants\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\nvar forName = [];\r\nvar forAmount = [];\r\n\r\n\r\nfunction Graph() {\r\n  const [data, setData] = useState([]);\r\n  const [chart, setchart] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  let charname = \"logistics\";\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.logList);\r\n      setData(result.data.logistics);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, []);\r\n\r\n  const onLogs = () => {\r\n    charname = \"logistics\";\r\n    setchart(charname);\r\n  }\r\n\r\n  const onSeedBatch = () => {\r\n    charname = \"seedbatch\";\r\n    setchart(charname);\r\n  }\r\n  const onPurity = () => {\r\n    charname = \"purity\";\r\n    setchart(charname);\r\n  }\r\n\r\n  const [basicData] = useState({\r\n\r\n    labels: forName,\r\n    datasets: [\r\n      {\r\n        label: \"Vendor Name x Amount\",\r\n        backgroundColor: \"#42A5F5\",\r\n        data: forAmount,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const getLightTheme = () => {\r\n    let basicOptions = {\r\n      maintainAspectRatio: false,\r\n      aspectRatio: 0.8,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: \"#495057\",\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n    return {\r\n      basicOptions,\r\n    };\r\n  };\r\n\r\n  const { basicOptions } = getLightTheme();\r\n\r\n  return (\r\n    console.log(charname),\r\n    (\r\n      <div>\r\n        {data.map(\r\n          (item, i) => (\r\n            (forName[i] = item.name),\r\n            (forAmount[i] = item.amount),\r\n            (<span></span>)\r\n          )\r\n        )}\r\n        <h2 className=\"mb-4\">\r\n          <b>Reports</b>\r\n        </h2>\r\n        <Button style={{ marginLeft: \"2rem\" }} onClick={() => { onLogs() }}>Logistics</Button>\r\n        <Button style={{ marginLeft: \"2rem\" }} onClick={() => { onSeedBatch() }}>Seed Batch</Button>\r\n        <Button style={{ marginLeft: \"2rem\" }} onClick={() => { onPurity() }}>Purity</Button>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Jumbotron>\r\n            {\r\n                chart.map((item) => (charname = item))\r\n            }\r\n          <div className=\"card\">\r\n            {charname == \"logistics\" ? (\r\n              <Chart type=\"bar\" data={basicData} options={basicOptions} />\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n          </div>\r\n        </Jumbotron>\r\n        <Button style={{ marginLeft: \"2rem\" }}>Bar Graph</Button>\r\n        <Button style={{ marginLeft: \"2rem\" }}>PolarArea Graph</Button>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}