{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BN GAMING\\\\Desktop\\\\Project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\task\\\\view_task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport constants from '../../utilities/constants';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constant = constants.getConstant();\nfunction Show(props) {\n  _s();\n  const [data, setData] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const location = useLocation();\n  setData(location.data.taskview);\n\n  //   const options = {\n  //     method: 'GET',\n  //     url: constant.empView,\n  //     params: {  id : location.id },\n  //     headers: {\n  //         'content-type': 'application/json',\n  //         'X-RapidAPI-Key': 'your-rapidapi-key',\n  //         'X-RapidAPI-Host': 'microsoft-translator-text.p.rapidapi.com',\n  //     },\n\n  useEffect(() => {\n\n    // const fetchData = async () => {\n    //   const result = await axios.request(options);\n    //   setData(result.data);\n    //   setShowLoading(false);\n    // };\n\n    // fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 8\n        }, this), data.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Task Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), data.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Task status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), data.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Task Assign Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), data.assign_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Task Deadline Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), data.deadline]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Assigned Employee name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), data.taskdetails[0].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Emplyoee Department: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), data.taskdetails[0].department]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Employee Designation: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), data.taskdetails[0].designation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Show, \"VuBwMNGxyKX3R43hKkSw5FfA0dU=\", false, function () {\n  return [useLocation];\n});\n_c = Show;\n;\nexport default _c2 = withRouter(Show);\nvar _c, _c2;\n$RefreshReg$(_c, \"Show\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","axios","Spinner","withRouter","useLocation","constants","Jumbotron","constant","getConstant","Show","props","data","setData","showLoading","setShowLoading","location","taskview","name","description","status","assign_date","deadline","taskdetails","department","designation"],"sources":["C:/Users/BN GAMING/Desktop/Project/Matrix-MERN-App/frontend/src/container/task/view_task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { withRouter ,useLocation} from 'react-router-dom';\r\nimport constants from '../../utilities/constants';\r\n\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nconst constant = constants.getConstant();\r\nfunction Show(props) {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  \r\n  const location = useLocation();\r\n   \r\n   setData(location.data.taskview);\r\n \r\n//   const options = {\r\n//     method: 'GET',\r\n//     url: constant.empView,\r\n//     params: {  id : location.id },\r\n//     headers: {\r\n//         'content-type': 'application/json',\r\n//         'X-RapidAPI-Key': 'your-rapidapi-key',\r\n//         'X-RapidAPI-Host': 'microsoft-translator-text.p.rapidapi.com',\r\n//     },\r\n      \r\n\r\n  useEffect(() => {\r\n   \r\n    // const fetchData = async () => {\r\n    //   const result = await axios.request(options);\r\n    //   setData(result.data);\r\n    //   setShowLoading(false);\r\n    // };\r\n\r\n    // fetchData();\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner> }\r\n      <h2>Task View</h2>\r\n      <Jumbotron>   \r\n\r\n\r\n   <h4><b>Name: </b>{data.name} </h4>  \r\n  <h4><b>Task Description: </b>{data.description}</h4> \r\n  <h4><b>Task status: </b>{data.status}</h4> \r\n  <h4><b>Task Assign Date: </b>{data.assign_date}</h4> \r\n  <h4><b>Task Deadline Date: </b>{data.deadline}</h4> \r\n  <h4><b>Assigned Employee name: </b>{data.taskdetails[0].name}</h4> \r\n  <h4><b>Emplyoee Department: </b>{data.taskdetails[0].department}</h4> \r\n  <h4><b>Employee Designation: </b>{data.taskdetails[0].designation}</h4> \r\n  \r\n  \r\n  </Jumbotron>\r\n  </div> \r\n  );\r\n  };\r\n\r\nexport default withRouter(Show);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}