{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\5th Semester\\\\Software Construction Lab\\\\project\\\\Matrix-MERN-App\\\\frontend\\\\src\\\\container\\\\graphs\\\\graphMain.js\",\n  _s = $RefreshSig$();\nimport \"./../../css/style.css\";\nimport \"./../../css/bootstrap.min.css\";\nimport { Button } from \"primereact/button\";\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\nimport { Chart } from \"primereact/chart\";\nimport axios from \"axios\";\nimport constants from \"../../utilities/constants\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constant = constants.getConstant();\nlet forName = [];\nlet forAmount = [];\nfunction Graph() {\n  _s();\n  const [data, setData] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(constant.logList);\n      setData(result.data.logistics);\n      setShowLoading(false);\n    };\n    fetchData();\n  }, []);\n  const [basicData] = useState({\n    labels: [forName, \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [{\n      label: \"Vendor Name x Amount\",\n      backgroundColor: \"#42A5F5\",\n      data: [60, 59, 80, 81, 56, 55, 40]\n    }]\n  });\n  const getLightTheme = () => {\n    let basicOptions = {\n      maintainAspectRatio: false,\n      aspectRatio: 0.8,\n      plugins: {\n        legend: {\n          labels: {\n            color: \"#495057\"\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        },\n        y: {\n          ticks: {\n            color: \"#495057\"\n          },\n          grid: {\n            color: \"#ebedef\"\n          }\n        }\n      }\n    };\n    return {\n      basicOptions\n    };\n  };\n  const {\n    basicOptions\n  } = getLightTheme();\n  return console.log(forName), console.log(forAmount), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((item, i) => (forName[i] = item.name, forAmount[i] = item.amount, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 68\n    }, this))), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Logistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Seed Batch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Purity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: forName != undefined ? /*#__PURE__*/_jsxDEV(Chart, {\n          type: \"bar\",\n          data: basicData,\n          options: basicOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 102\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"Bar Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginLeft: \"2rem\"\n      },\n      children: \"PolarArea Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Graph, \"yKa8TKlxczYyZ0Q4x0ijlhPGk9Y=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Button","Jumbotron","Chart","axios","constants","useEffect","useState","constant","getConstant","forName","forAmount","Graph","data","setData","showLoading","setShowLoading","fetchData","result","logList","logistics","basicData","labels","datasets","label","backgroundColor","getLightTheme","basicOptions","maintainAspectRatio","aspectRatio","plugins","legend","color","scales","x","ticks","grid","y","console","log","map","item","i","name","amount","marginLeft","undefined"],"sources":["D:/University/5th Semester/Software Construction Lab/project/Matrix-MERN-App/frontend/src/container/graphs/graphMain.js"],"sourcesContent":["import \"./../../css/style.css\";\r\nimport \"./../../css/bootstrap.min.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\r\nimport { Chart } from \"primereact/chart\";\r\nimport axios from \"axios\";\r\nimport constants from \"../../utilities/constants\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst constant = constants.getConstant();\r\n\r\nlet forName = [];\r\nlet forAmount = [];\r\n\r\nfunction Graph() {\r\n  const [data, setData] = useState([]);\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(constant.logList);\r\n      setData(result.data.logistics);\r\n      setShowLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [basicData] = useState({\r\n    labels: [forName, \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        label: \"Vendor Name x Amount\",\r\n        backgroundColor: \"#42A5F5\",\r\n        data: [60, 59, 80, 81, 56, 55, 40],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const getLightTheme = () => {\r\n    let basicOptions = {\r\n      maintainAspectRatio: false,\r\n      aspectRatio: 0.8,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: \"#495057\",\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: \"#495057\",\r\n          },\r\n          grid: {\r\n            color: \"#ebedef\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n    return {\r\n      basicOptions,\r\n    };\r\n  };\r\n\r\n  const { basicOptions } = getLightTheme();\r\n\r\n  return (\r\n    console.log(forName),\r\n    console.log(forAmount),\r\n    <div>\r\n      {data.map(\r\n        (item, i) => (\r\n          (forName[i] = item.name), (forAmount[i] = item.amount), (<span></span>)\r\n        )\r\n      )}\r\n      <h2 className=\"mb-4\">\r\n        <b>Reports</b>\r\n      </h2>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Logistics</Button>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Seed Batch</Button>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Purity</Button>\r\n      <br></br>\r\n      <br></br>\r\n      \r\n      <Jumbotron>\r\n        <div className=\"card\">\r\n            {\r\n               forName != undefined ? <Chart type=\"bar\" data={basicData} options={basicOptions} /> : <span></span> \r\n            }\r\n          \r\n        </div>\r\n      </Jumbotron>\r\n      <Button style={{ marginLeft: \"2rem\" }}>Bar Graph</Button>\r\n      <Button style={{ marginLeft: \"2rem\" }}>PolarArea Graph</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}